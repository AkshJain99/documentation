# SOME DESCRIPTIVE TITLE.
# Copyright (C) The Plone Foundation
# This file is distributed under the same license as the Plone Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Plone Documentation ['5', '4', '3']\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-05 16:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../working-with-content/adding-content/adding-collections.rst:2
msgid "Adding collections"
msgstr ""

#: ../working-with-content/adding-content/adding-collections.rst:4
#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:4
msgid "Collections (formerly called Smart Folders) are virtual containers of lists of items found by doing a specialized search."
msgstr ""

#: ../working-with-content/adding-content/adding-collections.rst:7
msgid "See the later section of the manual :doc:`../using-collections/index`"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:2
msgid "Adding Events"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:6
msgid "Plone web sites have a built-in system for managing and showing calendar events."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:8
msgid "Use the *Add new...* menu for a folder to add an event:"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:39
msgid "Select **Event** from the drop-down menu, and you'll see the rather large *Add Event* panel:"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:64
msgid "From the top, we have the following fields:"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:66
msgid "*Title* - **REQUIRED**"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:67
msgid "*Summary*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:68
msgid "*Event starts* - **REQUIRED**"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:69
msgid "*Event ends* - **REQUIRED**"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:70
msgid "*Whole Day*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:71
msgid "*Open End*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:72
msgid "*Recurrence*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:73
msgid "*Event Location*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:74
msgid "*Attendees*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:75
msgid "*Contact Name*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:76
msgid "*Contact Email*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:77
msgid "*Contact Phone*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:78
msgid "*Event URL*"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:79
msgid "*Event body text* (visual editor panel)"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:80
msgid "Change note"
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:82
msgid "Note that only three fields, title and start and end date and time, are required. So, although this is a large input panel, if you are in a hurry, just type in the title and the start and end times and save. Of course, if you have the other information, you should type it in."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:86
msgid "One part of the panel needs a bit more explanation: the event start and end times. Both these can be set using a handy pop-up calendar. This will show when you click on the date."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:89
msgid "Setting an event to be \"Whole day\" will remove the start and end times."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:91
msgid "But there are many more options: you can set an event to be \"Open-ended\" if you don't know when the end date is, or if it is an ongoing activity that you would still like to show as an event."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:93
msgid "For repeating events, use the \"recurrence\" link. You can set when, and how often, your event will repeat: daily, weekly, every third Tuesday of the month until 2017, etcetera. You can specify that an event should repeat a certain number of times, or until a certain date."
msgstr ""

#: ../working-with-content/adding-content/adding-events.rst:99
msgid "**IMPORTANT:** Your event will not show on the main web site calendar until it has been **published**."
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:2
msgid "Adding Files"
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:6
msgid "Files of various types can be uploaded to Plone web sites."
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:8
msgid "Choose file in the *Add new...* menu for a folder to upload a file:"
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:37
msgid "Select **File** from the drop-down menu, and you'll see the *Add File* panel:"
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:62
msgid "Click the *Browse* button to navigate to the file you want to upload from your local computer. Provide a title (you can use the same file name used on your local computer if you want). Provide a *description* if you want. When you click the save button the file will be uploaded to the folder."
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:67
msgid "Example file types include PDF files, Word documents, database files, zip files... -- well, practically anything. Files on a Plone web site are treated as just files and will show up in contents lists for folders, but there won't be any special display of them. They will appear by name in lists and will be available for download if clicked."
msgstr ""

#: ../working-with-content/adding-content/adding-files.rst:71
msgid "There are specialized add-on tools for Plone web sites that search the content of files, or can provide a preview of for instance PDF or Office files. If you are interested in this functionality, ask your Plone web site administrator."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:2
msgid "Adding Folders"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:6
msgid "Adding folders to a Plone web site is the basic way of controlling the organization of content."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:8
msgid "You have undoubtedly created folders (directories) on your computer's hard drive. Personal computers use a hierarchy of folders to structure and organize the programs and files on the hard drive. In Plone folders are essentially used the same way, except that they are created on a Plone web site, for organizing content in Plone's built-in storage system."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:12
msgid "Folders are added by clicking the **Add new...** drop-down menu. Select **Folder** from the menu:"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:43
msgid "You should now see the *Add Folder* screen:"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:68
msgid "Fill in the **Title**, which is required, as indicated by the red dot. The **Summary** is optional; you can always come back to the edit panel if you need to add a description of the folder. Summaries are useful when a site visitor uses the search tool included with Plone - results will display with both the Title and Summary of the item."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:72
msgid "You also notice tabs along the top:"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:74
msgid "*Default*, for entering the Title and Description fields,"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:75
msgid "*Categorization,* for specifying categories that apply to the folder (you may know these as *keywords*),"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:77
msgid "*Dates*, for setting the time period when the folder should be available for view on the web site,"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:79
msgid "*Ownership*, for specifying the creator and/or contributors for the content item,"
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:81
msgid "*Settings,* for allowing comments about the item, enabling :ref:`rst_prev-next-links`, and choosing whether it shows in the navigation menu for the web site."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:85
msgid "These tabs are standard, so you'll see them when you click other content types. We will cover these tabs in another section of this user manual."
msgstr ""

#: ../working-with-content/adding-content/adding-folders.rst:88
msgid "Be sure to click **Save** at the bottom of the page when you are finished. This will complete the folder creation process."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:2
msgid "Adding Images"
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:6
msgid "Adding images to a Plone web site is a basic task that may involve a little work on your local computer, but is essential, because photographs, maps, and custom graphics are so important on web sites."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:8
msgid ":doc:`preparing-images-for-the-web`"
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:12
msgid "**Remember to use web-standard file formats for all images. Acceptable formats include: JPG, JPEG, GIF, and PNG. Do not use BMP or TIFF formats as these are not widely supported by web browsers, and can lead to slower websites**"
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:15
msgid "When you are ready to upload an image, use the *Add new...* drop-down menu."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:45
msgid "After clicking to add an **Image**, you'll see the *Add Image* panel:"
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:68
msgid "The Title and Description fields (field, as in \"data input field\") are there, as with adding a Folder, and at the bottom there is a place to upload an image. Let's look at the three input fields individually:"
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:71
msgid "*Title* - Use whatever text you want, even with blanks and punctuation (Plone handles web addressing)."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:73
msgid "*Description* - Always a good idea, but always optional. Leave it blank if you want."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:75
msgid "*Image* - The Image field is a text entry box along with a Browse... button. You don't have to type anything here; just click the Browse button and you'll be able to browse you local computer for the image file to upload."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:80
msgid "For images, at a minimum, you will browse your local computer for the image file, then click **Save** at the bottom to upload the image to the Plone web site. You'll have to wait a few seconds for the upload to complete. A preview of the uploaded image will be shown when the upload has finished."
msgstr ""

#: ../working-with-content/adding-content/adding-images.rst:84
msgid "Images and files that you upload into Plone have their IDs (URLs) based on the title that you give to the image (instead of the file name of the image or file). However, if you leave the title empty, the name of the item will default to the name of the file."
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:2
msgid "Adding Links"
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:6
msgid "In addition to links embedding within pages, Links can be created as discrete content items. Having links as discrete items lets you do things like organizing them in folders, setting keywords on them to facilitate grouping in lists and search results, or include them in navigation."
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:9
msgid "Add a link by clicking the menu choice in the *Add new...* menu:"
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:37
msgid "You will see the Add*Link* panel:"
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:60
msgid "Good titles for links are important, because the titles will show up in lists of links, and because there tend to be large numbers links held in a folder or collection."
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:62
msgid "Paste the web address in the URL field or type it in. There is no preview feature here, so it is best to paste the web address from a browser window where you are viewing the target for the link to be sure you have the address correct."
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:66
msgid "The Link Object in Use"
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:68
msgid "A link object will behave in the following ways, depending on your login status, or permissions."
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:71
msgid "**If you have the ability to edit the link object**, when you click on the link object you'll be taken to the object itself so that you can edit it (otherwise you'd be taken to the link's target and could never get to the edit tab!)"
msgstr ""

#: ../working-with-content/adding-content/adding-links.rst:72
msgid "**If you don't have the ability to edit the link object**, when you click on the link object you'll be taken to the target of the link object. Likewise, if you enter the web address of the link object directly in your browser, you'll be taken directly to the link's target. The link object in this case acts as a *redirect*."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:2
msgid "Adding New Content"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:8
msgid "A general overview of how to add new content items in Plone, including definitions of each standard content type"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:10
msgid "New content items are added via the **Add New . . .** drop-down menu:"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:38
msgid "Adding content in Plone is done *placefully*, which means you should navigate to the section of your Plone website where you want the new content to reside **before** you use the **Add New . . .** drop-down menu. You can of course cut, copy, and paste content items from one section to another if needed at any later time."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:42
msgid "Content Types"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:44
msgid "In Plone, you can use a number of **Content Types** to post certain kinds of content. For example, to upload an image you must use the **Image** content type. Below is a list of the available content types in order of their appearance, and what each are used for:"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:48
#: ../working-with-content/portlet-management/portlet-types.rst:43
msgid "Collection"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:49
msgid "Collections are used to group and display content based on a set of **criteria** which you can set. Collections work much like a query does in a database."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:63
msgid "Event"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:51
msgid "An Event is a content type specifically for posting information about an event (such as a fundraiser, meeting, barbecue, etc). This content type has a function which allows the site visitor to add the event to their desktop calendar. This includes applications such as: Google Calendar, Outlook, Sunbird and others. To add a single event to your calendar, click on the iCal link next to the \"Add event to calendar\" text in the main view of the event item."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:61
msgid "You can also get all the events in a folder in one go (currently only available in iCal format). To download the iCal file, append *@@ics\\_view* to the end of the URL of the folder or collection containing the events. For example, if you want to get all the events from the *events* folder in the root of your site,go to *http://example.com/events/@@ics\\_view*."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:65
msgid "File"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:66
msgid "A File in Plone is any binary file you wish to upload with the intent to be downloaded by your site visitors. Common examples are PDFs, Word Documents, and spreadsheets."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:67
msgid "Folder"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:68
msgid "Folders work in Plone much like they do on your computer. You can use folders to organize your content, and to give your Plone website a navigation structure."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:69
msgid "Image"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:70
msgid "The Image content type is used for uploading image files (JPG, GIF, PNG) so that you can insert them into pages or other page-like content types."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:72
msgid "Link"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:72
msgid "Also referred to as the 'Link Object'; do not confuse this with the links you create with the visual editor on pages or other content types. The Link content type is often used to include a link to an external website in Navigation and other specialized uses."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:75
msgid "News Item"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:75
msgid "This content type is similar to a Page, only a News Item is specifically for posting news. You can also attach a thumbnail image to a News Item, which then appears in folder summary views next to the summary of the News Item."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:79
msgid "Page"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:78
msgid "A Page in Plone is the basic content types. Use Pages to write the bulk of your web pages on your Plone website."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:81
msgid "Note: Depending on what add-on products you have installed, you may see more options in your **Add New . . .** drop-down menu than appear here. For information about those additional content types, refer to the Product documentation for the add-on in question."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:85
#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:26
msgid "Title"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:87
msgid "Nearly all content types in Plone have two fields in common: **Title** and **Description.**"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:89
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:10
msgid "The **Title** of content items, including folders, images, pages, etc., can be anything you want -- you can use any keyboard characters, including spaces. **Titles** become part of web address for each item you create in Plone. Web addresses, also known as URLs, are what you type in a web browser to go to a specific location in a web site (Or, you would click your way there), such as:"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:93
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:14
msgid "www.mysite.com/about/personnel/sally/bio"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:95
msgid "or"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:97
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:18
msgid "www.mysite.com/images/butterflies/skippers/long-tailed-skippers"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:99
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:20
msgid "Web addresses *do* have restrictions on allowed keyboard characters, and spaces are not allowed. Plone does a good job of keeping web addresses correct by using near-equivalents of the **Title** that you provide, by converting them to lowercase, and by substituting dashes for spaces and other punctuation."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:103
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:62
msgid "The web address of a given item is referred to as the **short name** in Plone. When you use the **Rename** function, you'll see the short name along with the title."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:106
msgid "The fields will vary according to the content type. For instance, the Link content type has the URL field. The File content type has the File field, and so on."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:111
#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:5
#: ../working-with-content/content-quality/content-quality-helpers.rst:5
#: ../working-with-content/content-quality/index.rst:5
#: ../working-with-content/managing-content/ploneformgen/captcha.rst:5
#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:5
#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:24
#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:5
#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:5
#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:5
#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:5
#: ../working-with-content/managing-content/ploneformgen/embedding.rst:5
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:5
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:44
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:80
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:170
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:186
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:201
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:252
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:288
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:334
#: ../working-with-content/managing-content/ploneformgen/gpg.rst:5
#: ../working-with-content/managing-content/ploneformgen/index.rst:5
#: ../working-with-content/managing-content/ploneformgen/installation.rst:5
#: ../working-with-content/managing-content/ploneformgen/javascript.rst:5
#: ../working-with-content/managing-content/ploneformgen/multipage.rst:5
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:5
#: ../working-with-content/managing-content/ploneformgen/request.rst:5
#: ../working-with-content/managing-content/ploneformgen/restyle.rst:5
#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:5
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:5
#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:45
msgid "Description"
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:113
msgid "The **Description** appears at the top of pages, just under the Title. Descriptions are often used to conjunction with a variety of Folder and Collection views (such as Standard and Summary). The Description also appears in search results via Plone's native search engine."
msgstr ""

#: ../working-with-content/adding-content/adding-new-content.rst:117
msgid "The Description is just plain text, without any form of mark-up. This is to keep it inline with the :term:`Dublin Core` standard, a long-established way of categorizing information."
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:2
msgid "Adding News Items"
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:6
msgid "Plone web sites have a built-in system for publishing news items."
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:8
msgid "Use the *Add new...* menu for a folder to add a news item:"
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:36
msgid "You will see the *Add News Item* panel:"
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:59
msgid "The standard fields for title, description, and change note are in the panel, along with a visual editor area for body text and image and image caption fields. You can be as creative as you want in the body text area, and you can use the insert image (upload image) function to add as much illustration as needed. The images you upload for the news item will be added to the folder in which you are adding the news item."
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:63
msgid "The *Lead Image* and *Lead Image Caption* fields are for adding an image to be used as a representative graphic for the news item, for posting in news item listings. The image will be automatically resized and positioned. Use the **Body Text** to insert an image in the actual body of the News Item."
msgstr ""

#: ../working-with-content/adding-content/adding-news-items.rst:69
msgid "**IMPORTANT**: News items will not appear in the main web site news listing or news portlet until they are **published.**"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:2
msgid "Adding Pages"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:6
msgid "Pages in Plone vary greatly, but are single \"web pages,\" of one sort or another."
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:9
msgid "To add a page, use the *Add new...* menu for a folder:"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:37
msgid "Select **Page** from the menu, and you'll see the *Add Page* screen:"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:60
msgid "The **Title** and **Description** fields are there at the top. Fill each of them out appropriately. There is a *Change note* field at the bottom, also a standard input that is very useful for storing helpful memos describing changes to a document as you make them. This is useful for pages on which you may be collaborating with others."
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:63
msgid "The middle panel, **Body Text**, is where the action is for pages. The software used for making Pages in Plone, generically called *visual editor* and specifically a tool called TinyMCE, is a most important feature allowing you to do WYSIWYG editing. WYSIWYG editing -- *What You See Is What You Get* -- describes how word processing software works. When you make a change, such as setting a word to bold, you see the bold text immediately."
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:68
msgid "People are naturally comfortable with the WYSIWYG approach of typical word processors. We will describe later in this manual."
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:71
msgid "Markup languages"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:73
msgid "Your site-administrator may also enable so-called markup languages. If you are the sort of person who likes to enter text using so-called mark-up formats, you may switch off the visual editor under your personal preferences, which will replace it with a simplified textentry panel. The mark-up formats available in Plone are:"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:77
msgid "[Markdown](http://en.wikipedia.org/wiki/Markdown)"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:78
msgid "[Textile](http://en.wikipedia.org/wiki/Textile_%28markup_language%29)"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:79
msgid "[Structured Text](http://www.zope.org/Documentation/Articles/STX)"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:80
msgid "[Restructured Text](http://en.wikipedia.org/wiki/ReStructuredText)"
msgstr ""

#: ../working-with-content/adding-content/adding-pages.rst:82
msgid "Each of these works by the embedding of special formatting codes within text. For example, with structured text formatting, surrounding a word or phrase by double asterisks will make that word or phrase bold, as in \\*\\*This text would be bold.\\*\\* These mark-up formats are worth learning for speed of input if you do a lot of page creation, or if you are adept at such slightly more technical approaches to entering text. Some people prefer such formats not just for speed itself, but for fluidity of expression."
msgstr ""

#: ../working-with-content/adding-content/index.rst:3
msgid "Adding Content"
msgstr ""

#: ../working-with-content/adding-content/index.rst:5
msgid "How to add basic content types to Plone web sites"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:2
msgid "Preparing Images for the Web"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:4
msgid "Preparing images for the web is an essential part of using images in Plone, or in any online context. As you will see, size matters."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:7
msgid "Many people source photographs taken with a digital camera, but they can also be scanned images, graphical illustrations made with software, and other specialized images. Let's take a look at the case of a butterfly photo taken with a digital camera."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:10
msgid "Digital photographs taken with modern cameras are usually too big to post directly on a website, so they need to be resized. A typical web site design may have a width of around 1000 pixels. When a photograph comes off your camera, it may be several thousand pixels wide and tall, and several megabytes in file size. You need to use software on your computer to resize the image to something less than 1000 x 1000 pixels, often much smaller than that."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:14
msgid "The software you use to view or print your digital photos will often have this resizing functionality, or you may have graphics software such as Adobe Photoshop or Gimp on your computer. Resizing an image, sometimes called resampling, is a standard function you should be able to find in your software, often under the *Image* menu. Some also have a special \"save for web\" command."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:17
msgid "How do you know what width, in pixels, to resize your image? It depends. For a little \"head shot\" photograph to go in a biography, maybe 200 pixels wide is just right. For a group photograph, 200 pixels would be too small to allow identification of the people in the photograph, so it may need to be closer to 400 pixels wide. For a scanned map image, perhaps the image width would need to be 1000 pixels for the map detail to be usable."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:23
msgid "After saving your resized image, give it a name that indicates the new size (e.g., butteryfly-resized-300px.jpg). The file format is most commonly .jpg (or .jpeg). Other common formats for images include .png and .gif. Take note of where you save images on your computer so that you can find them when you upload them to your Plone web site."
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:33
msgid "**To summarize**:"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:35
msgid "Take your photograph with your camera, or find an existing image you want to use"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:36
msgid "Transfer it to your computer"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:37
msgid "Use image software on your computer to resize your photograph"
msgstr ""

#: ../working-with-content/adding-content/preparing-images-for-the-web.rst:38
msgid "Upload it to your Plone website"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:2
msgid "Restricting Types in a Folder"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:6
msgid "The Add new... menu has a choice for restricting the content types that can be added to the folder."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:8
msgid "Restricting types available for adding to a folder is the simplest way to control content creation on a Plone web site. You may want to restrict content types if your site is going to be worked on by several people. In this way you can enforce good practices such as putting just images in the images folder, or having your \"News\" items all in the same folder."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:14
msgid "Setting restrictions in the very top level, also know as the *root* of the website, is restricted to site administrators. That is because this will influence the navigation, and may lead to unwanted side effects."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:17
msgid "First, select the last choice in the *Add new...* menu called *Restrictions...*:"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:44
msgid "There are three choices shown for restricting types in the folder:"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:46
msgid "Use parent folder settings"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:47
msgid "Use portal default"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:48
msgid "Select manually"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:50
msgid "The default choice, to use the setting of the parent folder. That means when you create a folder and restrict the types that can be added, any subfolders created in the folder will automatically carry the restrictions."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:53
msgid "The second choice is a way to reset to the default, unrestricted setting."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:55
msgid "The last choice allows selection from a list of available types:"
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:85
msgid "Types listed under the *Allowed types* heading are those available on the web site. The default, as shown, is to allow all types. Allowed types may be toggled on and off for the folder."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:89
msgid "Use of *Secondary types* allows a kind of more detailed control. For example, if it is preferred to store images in one folder, instead of scattering them in different folders on the web site -- a scheme that some people prefer -- an \"Images\" folder could be created with the allowed type set to the Image content type *only*."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:92
msgid "Likewise an \"Company Events\" folder could be created to hold only the Event content type."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:94
msgid "If left this way, content creators would be forced (or a single web site owner) to follow this strict scheme."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:96
msgid "Perhaps some flexibility is desired for images, though. By checking the Image content type under the *Secondary types* heading for the \"Company Events\" folder, images could be added if really needed, by using the *More...* submenu, which would appear when this mechanism is in place. So, the *Secondary types* will be allowed, but be a little more hidden when adding content. That way, you still have flexibility without confusing part-time editors with too many options."
msgstr ""

#: ../working-with-content/adding-content/restricting-types-in-a-folder.rst:100
msgid "Some people prefer a heterogeneous mix of content across the web site, with no restrictions. Others prefer a more regimented approach, restricting types in one organizational scheme or another. Plone has the flexibility to accommodate a range of designs."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:2
msgid "Setting Basic Properties"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:6
msgid "The tab panels available on each content item has fields for basic information. The more data you can provide, the better Plone can help in making the content available to the relevant visitors."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:9
msgid "Any content item, when clicked by a user with edit rights for the item, will show a set of tabs at the top for setting basic properties:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:42
msgid "These basic properties tabs are:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:44
msgid "*Default* - shows the main data entry panel for the content item"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:45
msgid "*Settings* - shows a small panel for setting whether or not the item will appear in navigation menus and if comments are allowed on the item"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:46
msgid "*Categorization* - shows a panel for creating and setting tags (keywords) for the item"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:47
msgid "*Dates* - shows the publishing date and expiration date for the item"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:48
msgid "*Ownership* - shows a panel for setting creators, contributors, and any copyright information for the item"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:51
msgid "The input fields under these tabs cover basic descriptive information called **metadata**. Metadata is sometimes called \"data about data.\" Plone can use this metadata in a multitude of ways."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:55
msgid "Here is the *Categorization* panel, shown for a page content item (would be the same for other content types):"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:74
msgid "The main input field for the panel is for specifying *Tags*, sometimes also known as *Categories*"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:76
msgid "Create them, just by typing in words or phrases. Plone will automatically search for existing tags while you type, so you can select already existing tags. If you want to create a new tag, just hit \"enter\" after your word (or phrase)."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:80
msgid "The *Related Items* field lets you set links between content items, which will show as links at the bottom, when a content item is viewed. This is useful when you don't want to use explicit tags to connect content."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:83
msgid "The *Location* field is a geographic location, suitable for use with mapping systems, but appropriate to enter, for general record keeping. Note that this field may not always be present, this is a setting that your site administrator has to enable."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:85
msgid "The *Language* choice normally would default to the site setting, but on multilingual web sites, different languages could be used in a mix of content."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:87
msgid "The *Dates* panel has fields for the publishing date and the expiration date, effectively start and stop dates for the content if you wish to set them:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:107
msgid "The publication and expiration dates work like this:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:109
msgid "When an item is past its expiration date, it's marked \"expired\" in red in its document byline when viewed."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:111
msgid "An item whose publication date is before the current date doesn't get extra text in its byline."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:113
msgid "In both cases, the item is \"unpublished\", which is not to be confused with a workflow state."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:115
msgid "It merely means the item doesn't show up in listings and searches."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:116
msgid "These listings include folder listings."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:117
msgid "However, the owner of the item will keep seeing it, which is handy because you like to know what you have lying around in your site."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:119
msgid "The permission that controls this is Access inactive portal content."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:120
msgid "Expired items in a folder are marked as such when viewing the folder\\_contents."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:122
msgid "There's no quick way of seeing if items in a folder listing are not yet published."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:124
msgid "When you set an unpublished item as the default view for a folder, that item will be shown."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:126
msgid "Unpublishing an item doesn't have any effect for admins. They will always see unpublished items in their listings and searches."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:128
msgid "Giving another regular users rights (\"can add\", can edit\", \"can review\") on the item doesn't make it any less unpublished for those users."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:131
msgid "A practical way for a non-admin user to access an unpublished item is directly through its URL."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:134
msgid "The *Ownership* panel has three free-form fields for listing creators, contributors, and information about copyright or ownership rights to the content:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:154
msgid "The *Settings* panel has fields that may vary a bit from content type to content type, but generally there are input fields controlling whether or not the item appears in navigation, or if there are comments allowed, and other similar controls:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:179
msgid "Recommendations"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:181
msgid "There is no requirement to enter the information specified through these panels, but it is a good idea to do so. For the *Ownership* panel, providing the data is important for situations where there are several people involved in content creation, especially if there are multiple creators and contributors working in groups. You don't always need fields such as publishing and expiration dates, language, and copyrights, but these data should be specified when appropriate. A content management system can only be as good as the data completeness allows."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:187
msgid "Specifying tags requires attention, but if you are able to get in the habit, and are committed to creating a meaningful set of tags, there is a big return on the investment. The return happens through the use of searching and other facilities in Plone that work off the categorization. The same holds for setting related items. You'll be able to put your finger on what you need, and you may be able to discover and use relationships within the content."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:192
msgid "Exposing Metadata Properties as meta tags in the HTML source"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:194
msgid "From Plone 4 on, in *Site Setup*, there is a check box that will expose the :term:`Dublin Core` metadata properties. Checking this box will expose the title, description, etc. metadata as meta tags within the HTML ``<head>``. For example:"
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:211
msgid "The generator will check and obey the so-called *allowAnonymousViewAbout* setting in the :term:`Control Panel` and affects the properties*Creator*, *Contributors* and *Publisher*."
msgstr ""

#: ../working-with-content/adding-content/setting-basic-properties.rst:213
msgid "You can read more about `Dublin Core <http://dublincore.org/>`_ and `HTML Metatags <http://www.w3.org/TR/html401/struct/global.html#h-7.4.4.2>`_."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:2
#: ../working-with-content/adding-content/whats-in-a-web-name.rst:8
msgid "What's in a Web Name?"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:4
msgid "Individual content items on a Plone web site have discrete web addresses. Plone creates these automatically, based on the Title that you supply."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:16
msgid "OR"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:23
msgid "To illustrate, let's take each of these two web addresses and split them out into their component parts:"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:39
msgid "In this example, Plone changed each folder title to lowercase, e.g., from Personnel to personnel. You don't have to worry about this. Plone handles the web addressing; you just type in titles however you want."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:43
msgid "And, for the second example:"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:59
msgid "This example is similar to the first, illustrating how there is a lowercase conversion from the title of each folder to the corresponding part of the web address. Note the case of the folder named Long-tailed Skippers. Plone kept the dash, as that is allowed in both title and part of the web address, but it changed the blank between the words Tailed and Skippers to a dash, in the web address, along with the lowercase conversion."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:66
msgid "What’s in a Title?"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:68
msgid "The title of a content item not only affects the **short name** that is used in the URL of the item. It is also displayed, with a twist, in the `title bar <http://en.wikipedia.org/wiki/Window_decoration#Title_bar>`_ of the browser window, or in the browser tab. The twist consists in the fact that what is displayed consists of the *item title* and the *site title*, separated by an `Em dash <http://en.wikipedia.org/wiki/Dash#Em_dash>`_. The site title is set in the *site control panel* (``http://yoursite.com/@@site-controlpanel``), but for the purposes of this section it is not necessary to have the permissions to access it."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:73
msgid "For example, the title for the item at https://www.cia.gov/about-cia shows in the browser tab or title bar as:"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:75
msgid "*About CIA — Central Intelligence Agency*."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:77
msgid "The part to the left of the Em dash, **About CIA** is the *item title*, while the part to the right, **Central Intelligence Agency**, is the *site title*. The site title is appended to the item title, with an Em dash, automatically.  Technically, this is  what the ``<title>`` HTML element is set to."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:80
msgid "Why is this important?  In and of itself, this behavior of a Plone site might often be overlooked. However, it becomes important when looking at the results provided by a search engine, such as Google. When Google lists a page from a Plone site, the title used is the same one just described (*item title — site title*)."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:84
msgid "Often, you might want the homepage of your site to be listed in Google search results with just the site title. But you can not leave the homepage item title empty, so how to achieve this? Thankfully, there is an easy solution:  make the homepage title **exactly identical** to the site title."
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:88
msgid "In the CIA example above, if the homepage title were set to *Central Intelligence Agency*, then Google would list it simply as:"
msgstr ""

#: ../working-with-content/adding-content/whats-in-a-web-name.rst:90
msgid "*Central Intelligence Agency*"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:2
msgid "Advanced Control"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:4
msgid "The publication control system, under the advanced menu, has sophisticated features for setting availability by date and by context."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:7
msgid "The *state* menu has an *advanced*... item:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:15
msgid "which brings up the *advanced* state panel:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:21
msgid "Below an explanation section at the beginning of the panel, there is a check box showing the content that will be affected by this change of publication state. It shows that the folder \"Long-tailed Skipper\" will be affected by this state change."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:26
msgid "A brief aside:  you may have noticed that, apart from the checkbox to the left, there is also a checkbox above, next to the headers of the *Affected content* section.  The reason is that this same *advanced* state panel can be used to make the changes described below to a whole list of unrelated content items simultaneously, in bulk, from the *contents* tab of a folder.  More on this later."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:33
msgid "The next field, *Include contained items*, is a check box for controlling whether the state change affects this item only (the \"Long-tailed Skipper\" folder) or the items it contains and all of any subfolders and other contained items. This is an important check box. It lets you easily change the availability of an entire section of a website. For example, the \"Long-tailed Skipper\" folder could contain four subfolders, for photographs, species occurrence descriptions, taxonomic history, and behavior descriptions, all of which has been kept *private* during the initial work to build up this content. All of it could be immediately made public -- it could be *published* -- by checking this box and checking *Publish* at the bottom before saving. Likewise, the *Submit for publication* choice would be used on a web site where editors controlled ultimate publication."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:47
msgid "Likewise, an entire section could be immediately made *private*. For example, if an automobile rental agency decided to remove a car model from its fleet, an entire section of their website devoted to this car model, with several subfolders full of pages, images, and files, could be set to *private*."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:53
msgid "The next two date fields are for *effective date* and *expiration date*. Their meanings are straightforward. If there is a window of time, for which a content item or a set of content items is valid for publication, it may be set with these fields."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:58
msgid "A comment lets you attach an explanation to all content affected by the state change. This is especially useful when several people are working on a website, and a person less familiar with an area of the web site looks at content and wonders why it isn't published. They wonder, \"This information looks good. Why isn't it published already?\" Then they read a comment that says something like, \"Don't publish until Richard checks on copyright issues regarding the items described here.\" Using comments is a good idea for sensitive information, even if you are the only person working on the web site, because you might forget why you made a decision about publication state."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/advanced-control.rst:69
msgid "Finally, at the bottom there is a choice of several available states for this action. It will vary, depending on the present state of the item. For example, if the item is currently in a published state, there won't be a choice for *publish*, if the item is presently in a *private* state, there won't be a choice for *make private*, etc. If an item is published already, there will be choices in this bottom part of the panel for *reject* and *retract*, for \"unpublishing\" at item, setting it back to *public draft* or then to *private* state."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:2
msgid "Basic Publication States"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:4
msgid "The publication control system for Plone is very flexible, starting with basic settings for making an item private or public."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:7
msgid "In the upper right corner of the edit panel for any content type -- folders, images, pages, etc., and any specialized content types -- there is a menu for publication state. This *state* menu has settings for controlling publication state:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:16
msgid "The header for the menu will show the current publication state for the content item, such as *State: Private*, as shown above. Private is the initial state when you create a content item -- a page, a news item -- and in the private state, as the name indicates, the content item will generally not be available to visitors to the web site. The *Publish* menu choice will make the content item available on the web site to anonymous visitors. The *Submit for publication* menu choice is used on web sites where there are content editors who must approve items for publication, as discussed below."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:26
msgid "Also, and this will be very important, certain content types, such as news items and events, will not appear on the website as you expect, until they are explicitly *published*."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:30
msgid "Store this in your memory: **Publication state is important!**"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:32
msgid "Publication state can be changed only by users whose accounts have the necessary permissions. The menu choices in the state menu will reflect existing permissions settings. For example, in a big newspaper web site, a reporter could add pages for news articles, but the state menu will not show a *Publish* menu choice, only a *Submit for publication* menu choice. This is because a reporter must submit articles up the line to the editorial staff for approval before publication. If your account has the permissions, however, the *Publish* menu choice will appear and you can simply publish in one step."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:42
msgid "For an editor, a content item that has been submitted may be *published* or *rejected*, either outright, because it is an inappropriate submission for the situation, or for the more typical reason that the content item needs revision."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:47
msgid "After a content item has been *published*, it may be *retracted*, to change the state back to *public draft* state, or *sent back* to private, if desired. The menu choices in the state menu will change accordingly:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/basic-publication-states.rst:56
msgid "Consideration should be given to retracting (\"unpublishing\"), or setting to *private*, any content that has become obsolete or undesired for some reason. Setting to *private* will take the item from public view and from showing up in search results, but will keep it around in case the format or the actual material (text, images, etc.) is needed later. This is especially true for content relating to events that may recur or to one-of-a-kind creations. The decision to delete or to set to *private* may depend on whether or not the content exists elsewhere, on a local computer. If the content is large in size, in the sense of disk space taken, perhaps saving to a local computer is warranted before deletion, if space on the website server computer is an issue."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:2
msgid "Collaboration through Sharing"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:4
msgid "The Sharing tab empowers you to collaborate with other users through the use of several built-in roles."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:7
msgid "Example 1: Letting others add content to a folder you created"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:9
msgid "In this example, Jane Smythe has full access to her Plone site. She can add, edit, delete and publish content anywhere in the site. For now, she has created a folder called \"Documentation\" and added one Page to it, \"Project Overview\". She hasn't published either the folder or the document."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:14
msgid "The default workflow for this Plone site has not been modified. Now she wants to let her colleague, George Shrubb, add content to the Documentation folder."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:17
msgid "He has permission to edit any of the existing content, but she needs him to start adding content. Before we follow along with Jane, let's take a peek at what George currently sees when he logs in on this Plone site:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:24
msgid "Notice that as of right now, George can't even view the Documentation folder, because Jane created it and it is still in the *Private* state."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:26
msgid "All the default permissions are currently in place and work as expected."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:28
msgid "Jane gives George the permissions he needs to add content to the Documentation folder."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:30
msgid "Jane navigates to the Documentation folder and clicks on the Sharing tab:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:36
msgid "One of the first things to notice is that Jane already has all the permissions available for this Folder."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:38
msgid "These permissions were actually granted from higher up in the site as indicated by the green/check mark symbol."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:40
msgid "Taking a closer look at the available permissions, they are:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:42
msgid "**Can add** - This means that when this permission is granted to a particular user (or group of users), that user can then add new content items. And since that user was also the creator of that content item, they will be able to edit it as they like."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:44
msgid "**Can edit**- When this permission is granted on a folder, the user can not only edit the Folder (its title and description) but can also edit any of the items in the folder. Note, however, the user is not allowed to delete any of the content. When this permission is granted on a Page, for example, the user can only edit that Page and none of the other items in the folder."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:47
msgid "**Can view** - When this permission is used on a folder or other item, the user can view the content but not make any changes."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:48
msgid "**Can review** - When this permission is granted, the user can publish items."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:50
msgid "Note: these permissions will override the default workflow permissions! For example, if you grant a user \"Can view\" permission on a Page that is in the Private state, that user will be able to see that Page."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:53
msgid "In this example, Jane will grant George \"Can add\" permission on the \"Documentation\" folder so that he can add content to the folder.\\ First, she searches to find him by his name:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:60
msgid "Jane can now add specific permissions for George in the \"Documentation\" folder. She is going to give him the \"Can add\" permission and then click on \"Save\":"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:67
msgid "And that's all there is to it! Let's see how George views the site now."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:69
msgid "Note: George does NOT need to log out and log back in. Permissions are always current because they are checked every time a user accesses anything (e.g. clicks on a link) on a Plone site."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:72
msgid "George clicks on the *Home* tab (for example) to refresh his view of the site and can now see the \"Documentation\" folder:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:78
msgid "When George clicks on the \"Documentation\" tab, he notices that he can view all the content in the \"Documentation\" folder, and he now is able to add the available content types to the folder, as shown in the *Add new...* menu:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:84
msgid "George wants to review what Jane has already created, so he clicks on the Project Overview link and sees:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:90
msgid "While George can view the document, his limited permissions do not allow him to edit it or change its state. The only thing he can do beyond viewing the document is to make his own copy of it."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:92
msgid "George adds a Page called \"Widget Installation\" and creates the content for that Page. When he's done he saves it:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:99
msgid "Jane views the work George has done. She clicks on the \"Documentation\" tab and sees that George indeed has been busy. She clicks on \"Widget Installation\" page to take a closer look:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:107
msgid "Notice that Jane has full access to the page that George created. She can edit it as well as cut/copy/paste it."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:110
msgid "Instead, she will wait until George submits the page for review before actually doing anything further with this page."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:113
msgid "Example 2: Letting others edit content you created"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:115
msgid "Both Jane and George have been hard at work creating pages in the Documentation folder."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:117
msgid "**Jane has published the Documentation folder and several pages:**"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:123
msgid "Jane has decided that she wants to turn over all editing (but not publishing) control of the \"Documentation\" folder to George. So she returns to the \"Documentation\" folder and clicks on the *Sharing* tab:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:132
msgid "From here she only needs to tick the \"Can edit\" check box and George will be able to edit all the content in the \"Documentation\" folder --including the \"Documentation\" folder itself. When George next visits the folder and clicks on \"Project Overview\" (which is a Page that Jane created), this is what he sees:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:141
msgid "So now George can edit any item in the \"Documentation\" folder regardless of who created it or when."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:143
msgid "Meanwhile, Molly has joined George as a new team member. George helps Molly start updating the \"Widget Installation\" document. He goes to the sharing tab for \"Widget Installation\" and searches for Molly's Full Name (not username) and gives her the \"Can edit\" permissions on this document."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:153
msgid "Now when Molly goes to the \"Documentation\" folder, she can see the two published items and the private item that she is now allowed to edit:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:161
msgid "And, in fact, when she clicks on the \"Widget Installation\" document, she is able to edit it:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:169
msgid "Notice, however, when she clicks on either of the two items she isn't allowed to edit, she doesn't have any additional access. She can view these two items because they are published and in the default Plone workflow (meaning that anyone can view them)."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/collaboration-through-sharing.rst:178
msgid "One final note on this example: if the \"Documentation\" folder was not in the published state OR Molly had not been given any other permissions (for example, \"Can view\" on the Documentation folder), then Molly would have needed the complete URL to reach the document she had been given access to edit. Permissions are very specific in Plone!"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:3
msgid "How a folder's workflow state affects its content"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:7
msgid "On this page we are referring to workflow states and their effects on content as they are configured in a default Plone installation.  Your specific site may have custom workflows, and the following discussion may or may not apply."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:9
msgid "When it comes to the *Private* state, **Folders** are somewhat special.  Changing a folder to (or leaving it in) *private* state has the following effects:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:11
msgid "The folder *as well as all its contents* are taken out of the navigation and site map for anonymous users, and also for logged-in users who don't have permission to see private content.  This means that all these users will not be able to find either the folder or any of its contents through any of the navigation menus.  Of course, this includes external search engine robots."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:12
msgid "The folder itself can not be viewed by anonymous users, or by logged-in users who do not have permission to see private content.  This is true even if an anonymous user, for example, had the direct URL to the folder, which would be the case if a link to the folder was part of the content body of a page in a different section of the same site or even a different site.  Clicking such a link would result in being redirected to the login form."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:13
msgid "However, any **published** content of a **private** folder (or even of any of its sub-folders) **will** appear in the site search, even for anonymous users."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:14
msgid "Also, anonymous users who know the URL of a *published* content item inside a *private* folder will be able to view this content.  Consequently, if a link to any such published content of a private folder is embedded in any part of the same site or external site, that content will be viewable by anyone."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:16
msgid "Thus, putting a folder in the private state is not a guarantee of security for any of its contents.  Unless, of course, all the content has been made private, as well.  This can be done in bulk and in a single step, as described in :doc:`Advanced Control <advanced-control>`."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:18
msgid "This is especially true of a folder's default item view (see :doc:`Setting an Individual Content Item as the View for a Folder </working-with-content/managing-content/folder-view>`).  If the contained item that is set as the folder's default view is published, then the folder will in a sense be public as well, even if it's own state has been set to private.  However, the folder will still be hidden from navigation for anonymous users."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:20
msgid "When it comes to the folder default item view, care must be taken to have clarity on whether the desired workflow state is set on the folder, the default view item, or both."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:23
msgid "A caveat: Images and Files"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:24
msgid "When discussing **published** content of a **private** folder above, we glossed over an important assumption: namely, that all content items actually have a **published** state.  This assumption is actually incorrect.  The *Image* content type and the *File* content type do not have the *State* menu (in a default Plone installation).  Thus, they can not be made public or private or any other state.  Instead, Images and Files *inherit* their state from the container in which they find themselves.  Therefore an image in a private folder will be private;  an image in a public folder will be public."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/folder-workflow-state.rst:26
msgid "It is possible to bypass this inheritance of a folder's workflow state by contained images and files.  One of the workflows shipped with Plone by default is called \"Single State Workflow\".  To change the workflow for all Image content items, go to Type Settings on the Site Setup page.  Select *Image* (or *File*) in the top dropdown menu, and then \"Single State Workflow\" from the *New workflow* dropdown menu.  Once you click *Apply changes*, all Image content items will acquire the new workflow, and in particular, they will all be in published state, and will not inherit the containing folder's workflow state."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/index.rst:2
msgid "Collaboration and Workflow"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/index.rst:4
msgid "Learn how to share and control access to your content by using the Sharing tab and the State menu."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:2
msgid "Workflow Policies"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:4
msgid "Workflow policies allow a site administrator to create a formalized system for controlling publication and content management as a step-by-step flow involving different users in set roles."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:8
msgid "Workflow is an advanced subject. It involves creation of a more regimented control of content creation, review, and publication. If you have a user account on a typical small Plone site, you will probably not encounter custom workflow policies, because there isn't a need for this more sophisticated control. But, the potential is there for using this functionality, as it is built in to Plone."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:15
msgid "For an introduction to the workflow concept, consider an example involving a web site for a newspaper business, for which these different groups of people are at work:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:19
msgid "Reporters"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:20
msgid "Can create stories, but can only submit them for review."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:23
msgid "Editors"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:22
msgid "Can review stories, but can't publish completely. They send positively reviewed and edited stories up the line for further approval."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:26
msgid "Copy Editors"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:26
msgid "Do final fact checking, fixes, and review, and may publish stories."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:28
msgid "A *workflow policy*, sometimes abbreviated to *workflow*, describes the constraints on state-changing actions for different groups of people. Once the workflow policy has been created, it needs to be applied to an area of the website for the rules to take effect. In the example of the newspaper web site, a workflow policy would be set up and then applied to the folders where reporters do the work of adding news articles. Then, reporters would create stories and send them up the line for review and approval:"
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:41
msgid "Reporters would add news articles and would *submit* them (the *publish* menu choice is not available to them). Likewise, editors may *reject* the article for revision or they may, in turn, *submit* the article up the line to a copy editor for final proofreading and publication. In this newspaper business example, this policy could be called something like \"Editorial Review Policy.\" Configuring a workflow policy is a matter of applying it to an area of the website -- to define the scope of the workflow. This is a web site administrator task. The web site administrator would use control panels of Plone to specify where on the web site the \"Editorial Review Policy\" applies, site-wide or to a subsection."
msgstr ""

#: ../working-with-content/collaboration-and-workflow/workflow-policies.rst:53
msgid "Plone comes with several useful workflow policies -- the default one is a simple web publishing policy. Your web site administrator might employ a more specific policy, such as a policy for a community-based web site or a company Intranet (internal web system). If so, you may need to learn some procedural steps to publishing, but these are just elaborations of principles in the default, basic workflow policy."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:3
msgid "Content Quality helper tools"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:7
msgid "A selection of add-ons that can help create and maintain appealing, searchable, and high-quality content."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:11
msgid "Apart from the :doc:`inbuilt tools <index>`, there are several add-ons available."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:13
msgid "Note that these are all separate add-ons you will have to :doc:`install</manage/installing/installing_addons>`, and we strongly suggest testing them out first on a separate test-instance of your site, to see if they fit your purpose and do not interfere with other parts of your site. Also, some of these tools rely on web-services, which may or may not be allowed or advisable in high-security scenarios."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:18
msgid "Avoiding content errors"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:20
msgid "`collective.jekyll <https://pypi.python.org/pypi/collective.jekyll>`_ is a package that will help you identify common pitfalls, like too long or short titles or descriptions, or a URL starting with \"copy_of\". You can even set it up so it alerts editors when they don't stick to the preferred image format, or if a page has not enough links to other pages."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:21
msgid "`eea.progressbar <https://pypi.python.org/pypi/eea.progressbar>`_ can provide a visual clue as to where a document is in the workflow progress, making it easier for editors and reviewers to track what to do next to publish a document."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:24
msgid "Check your links"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:26
msgid "`collective.linkcheck <https://pypi.python.org/pypi/collective.linkcheck>`_ provides link validity checking and reporting."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:27
msgid "although you may also want to keep this out of Plone itself, and run an external linkchecker regularly. `This Linkchecker <http://wummel.github.io/linkchecker/>`_ is open source, available for multiple platforms and can be easily scripted."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:30
msgid "Better images"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:32
msgid "`Products.ImageEditor <https://pypi.python.org/pypi/Products.ImageEditor>`_ allows you to rotate, flip, blur, compress, change contrast & brightness, sharpen, add drop shadows, crop, resize an image, and apply sepia."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:33
msgid "`collective.aviary <https://pypi.python.org/pypi/collective.aviary>`_ integrates the external \"Aviary\" image editor into Plone."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:34
msgid "`plone.app.imagecropping <https://pypi.python.org/pypi/plone.app.imagecropping>`_ surprisingly enough, crops images."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:38
msgid "Tags, relations and more"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:40
msgid "`eea.tags <https://pypi.python.org/pypi/eea.tags>`_ provides a Facebook-like autocomplete widget for tagging content."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:41
msgid "`eea.alchemy <https://pypi.python.org/pypi/eea.alchemy>`_ allows you to bulk auto-discover geographical coverage, temporal coverage, keywords and more."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:42
msgid "`collective.taghelper <https://pypi.python.org/pypi/collective.taghelper>`_ can connect to a range of webservices to assist tagging"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:43
msgid "`collective.simserver <https://github.com/collective/collective.simserver.core>`_ can help with creating 'related items' links"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:44
msgid "`collective.taxonomy <https://github.com/collective/collective.taxonomy>`_ can set up hierarchical taxonomies in multiple languages"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:45
msgid "`collective.classifiers <https://github.com/collective/collective.classifiers>`_ provides a 'middle ground' between a complex taxonomy and simple tagging, allowing for two new fields to classify content"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:46
msgid "`collective.facets <https://github.com/collective/collective.facets>`_ is an alternative approach allowing editors to add 'facets' to content."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:50
msgid "Analytics and SEO"
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:52
msgid "`collective.googleanalytics <https://pypi.python.org/pypi/collective.googleanalytics>`_ enables easy tracking of the standard Google statistics as well as external links, e-mail address clicks and file downloads. It also defines Analytics reports that are used to query Google and display the results using Google Visualizations."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:53
msgid "`quintagroup.seoptimizer <https://pypi.python.org/pypi/quintagroup.seoptimizer/>`_ allows setting various meta tags and other information search engines like and need."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:54
msgid "if you have migrated from another system, and need to set up aliases to content that still lives in search engines, `Products.RedirectionTool <https://pypi.python.org/pypi/Products.RedirectionTool>`_ gives you an interface to Plone's built-in redirection and aliasing."
msgstr ""

#: ../working-with-content/content-quality/content-quality-helpers.rst:59
msgid "And after all that work, you can use `quintagroup.analytics <https://pypi.python.org/pypi/quintagroup.analytics>`_ to see your webmaster stats increase. Now lean back with your favorite hot beverage, you've earned it!"
msgstr ""

#: ../working-with-content/content-quality/index.rst:3
msgid "Create and maintain good quality content"
msgstr ""

#: ../working-with-content/content-quality/index.rst:7
msgid "Plone comes with several tools to maintain the quality of the content you create. This ensures both good results in search engines, as better usability for the visitors."
msgstr ""

#: ../working-with-content/content-quality/index.rst:12
msgid "What is \"content quality\"?"
msgstr ""

#: ../working-with-content/content-quality/index.rst:14
msgid "Under this heading we list several tools that help you to ensure content can be properly indexed, is enriched with meta-data such as tags, dates and even geo-location, and to make sure links are not broken."
msgstr ""

#: ../working-with-content/content-quality/index.rst:17
msgid "This will also help you with accessibility certification for your content, and Search Engine Optimization (SEO)"
msgstr ""

#: ../working-with-content/content-quality/index.rst:21
msgid "Batteries included"
msgstr ""

#: ../working-with-content/content-quality/index.rst:23
msgid "Plone comes standard with a whole host of features that help you:"
msgstr ""

#: ../working-with-content/content-quality/index.rst:25
msgid "The URL's for content are derived from the Title, making sure you have human-readable URL's"
msgstr ""

#: ../working-with-content/content-quality/index.rst:26
msgid "`Dublin Core <http://dublincore.org/>`_ metadata is used throughout"
msgstr ""

#: ../working-with-content/content-quality/index.rst:27
msgid "The navigation is automatic, and within folders you can also enable \"previous/next\" style links"
msgstr ""

#: ../working-with-content/content-quality/index.rst:28
msgid "Automatic filters in the editor ensure that the page will be saved as valid HTML"
msgstr ""

#: ../working-with-content/content-quality/index.rst:29
msgid "Behind the scenes, Plone registers internal links with so-called \"UUIDs\". In short, a unique key is generated for every content item, making sure all internal links will work if you move pieces of content or even whole folders around."
msgstr ""

#: ../working-with-content/content-quality/index.rst:30
msgid "When you delete a piece of content, you will receive a warning if there are other places in your site that still link to this content. You'll get the option to correct those other pages."
msgstr ""

#: ../working-with-content/content-quality/index.rst:31
msgid "If you move content around and people come to your site using the old URL, they will be automatically redirected to the new location. *(Tip: you can even use this to create short 'alias' URL's...)*"
msgstr ""

#: ../working-with-content/content-quality/index.rst:32
msgid "Images are automatically scaled. Even if your editors upload high-resolution images, you will get smaller sizes that ensure quick loading of your page. Of course the original image size is also available, if you want."
msgstr ""

#: ../working-with-content/content-quality/index.rst:34
msgid "And there are some hidden gems as well: you can enable (in the Control Panel, as site administrator) the `After The Deadline <http://www.afterthedeadline.com/>`_ intelligent spelling and grammar checker. Now while this is only available at the moment for English, French, Spanish and Portuguese, if your site uses one of those languages this is a very valuable add-on. For testing and light use, you can use the connection to the online service; if you have many users or create much content, you are advised to set up your own instance of the After The Deadline server. It is free and open source software."
msgstr ""

#: ../working-with-content/content-quality/index.rst:37
msgid "In the next section, we will point to several add-ons that can help even more to create and maintain high-quality content."
msgstr ""

#: ../working-with-content/index.rst:2
msgid "Working with Content"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:3
msgid "Conceptual Overview"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:5
msgid "An explanation of Plone as a content management system"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:8
msgid "What is Plone?"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:10
msgid "Plone is a content management system (CMS) which you can use to build a web site. With Plone, ordinary people can contribute content to a web site without the help of a computer geek. Plone runs over the Web, too, so you don't need to install any special software on your computer. The word *content* is meant to be general, because you can publish so many types of information, including:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:21
msgid "A Plone web site contains various kinds of content, including text, photos, and images. These can exist in many forms: documents, news items, events, videos, audio files, any types of file and data that can be uploaded or created on a web site. Content can also be uploaded from your local computer. You create *folders* on a Plone web site to hold content, and those automatically also create the navigation structure:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:33
msgid "You Love Butterflies"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:35
msgid "For example, to add content about butterflies, you might add a folder named \"Butterflies,\" then add some text to a web page in the folder:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:42
msgid "And then you might add some butterfly photos to the folder:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:48
msgid "You can add many types of content to a folder, including sub-folders. After adding a few reports and videos to the Butterflies folder, the content would be organized like this, with two sub-folders within the Butterflies folder:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:58
msgid "What Goes on Behind the Scenes"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:60
msgid "You may wonder how it all works. A typical Plone web site exists as an installation of Plone software on a web server. The web server may be anywhere, often at a website server company within a \"rack\" of computers dedicated to the task:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:69
msgid "The diagram shows the many cables that connect individual server computers to the Internet, across fast network connections. Your Plone site is just software and database storage software installed on one of the individual server computers. As you type or click on your computer, data is sent up and down the networking cables and communication channels of the Internet to interact with your Plone software installation on the server."
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:77
msgid "Let's simplify the diagram showing how you interact with Plone:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:83
msgid "You use your web browser -- Firefox, Safari, Internet Explorer, etc. -- to view and edit your Plone web site, and the changes are stored by the Plone software into its database storage system."
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:87
msgid "For example, imagine your butterfly Plone web site is located at mysite.com. You type www.mysite.com into your web browser. After you press Enter, the following sequence of events happens as your browser talks to the web server at mysite.com:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:96
msgid "The Plone software responds:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:102
msgid "Plone reads its database to look for information stored in mysite.com. It then sends back the web page to your computer, in a code called HTML. HTML is a computer language that describes how a web page looks. It includes text, graphics, fonts, the color of the background, and just about everything else. There are many online resources that can teach you HTML details, but one of Plone's advantages is that you don't need to know about HTML. That's one reason for Plone and other similar web software; to let you focus on your content, e.g., butterfly text and graphics, instead of learning a new computer language."
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:112
msgid "But back to our overview. Your web browser \"renders\" (translates) this HTML, and you see the resulting web page:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:119
msgid "As you view your butterfly web page, you can choose to change it or add to it. You can also upload photos, documents, etc. at any time:"
msgstr ""

#: ../working-with-content/introduction/conceptual-overview.rst:126
msgid "After you make your edits and click \"save changes,\" the new version of the web page will be immediately available to anyone surfing to your site:"
msgstr ""

#: ../working-with-content/introduction/index.rst:2
#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:10
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:12
#: ../working-with-content/managing-content/ploneformgen/index.rst:10
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:12
#: ../working-with-content/using-tinymce-as-visual-editor/introduction.rst:2
msgid "Introduction"
msgstr ""

#: ../working-with-content/introduction/index.rst:4
msgid "A Conceptual Overview of Plone"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:3
msgid "Setting Your Preferences"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:7
msgid "After logging in to a Plone web site, you can change your personal preferences for information about your identity and choice of web site settings."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:9
msgid "After logging in, your full name will show on the :term:`toolbar`."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:11
msgid "Click on your name to open the sub-menu, then click on the *Preferences* link to go to your personal area:"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:60
msgid "Date entry fields include:"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:62
msgid "*Wysiwyg editor* - Plone comes standard with :term:`TinyMCE`, an easy to use graphical editor to edit texts, link to other content items and so forth. Your site administrator might have installed alternatives, though."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:63
msgid "*Language* - On multilingual sites, you can select the language that you create content in most often. Plone excels at offering multilingual support."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:64
msgid "*Time zone* - If you work in a different timezone than the server default, you can select it here."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:68
msgid "Personal information"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:70
msgid "Now let's switch over to the \"Personal Information\" tab:"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:93
msgid "*Full Name*- If your name is common, include your middle initial or middle name."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:94
msgid "*E-mail address* - REQUIRED - You may receive emails from the website system, or from a message board, if installed, etc. When an item is required, a little red dot will show alongside the item."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:95
msgid "*Home page* web address - If you have your own web site or an area at a photo-sharing web site, for instance, enter the web address here, if you wish, so people can find out more about you."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:96
msgid "*Biography* text box - Enter a short description of yourself here, about a paragraph or so in length."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:97
msgid "*Location*  - This is the name of your city, town, state, province, or whatever you wish to provide."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:98
msgid "*Portrait* photograph upload - The portrait photograph will appear as a small image or thumbnail-size image, so it is best to use a head shot or upper-torso shot for this."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:100
msgid "You can change your preferences whenever you wish."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:104
msgid "Changing your password"
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:106
msgid "The last tab allows you to change your password."
msgstr ""

#: ../working-with-content/introduction/setting-your-preferences.rst:110
msgid "Plone is used by a variety of organisations. Some of these have centralized policies on where you can change your password, because this might also involve your access to other computer resources. In those cases, this screen might have been disabled."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:2
msgid "Plone User Accounts and Roles"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:6
msgid "Plone web sites come in many flavors, ranging from personal websites with one user to community, organization, or business websites that could have hundreds of users. Each person who adds content to a Plone web site has their own user account. A user account includes a user name and a password. Some Plone sites allow people to sign up by visiting the site, clicking a **Join** link, and filling out basic user information. Other sites have user accounts that are created by web site administrators, in which case people normally receive emails with the user account details."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:13
msgid "However created, a Plone user account allows a person to log in by typing their user name and password. Passwords are case-sensitive, which means that you have to pay attention to the uppercase and lowercase letters. For example, if your password is xcFGt6v, you would have to type that exactly for it to work. Passwords that have a variety of characters in them are preferred over passwords like \"raccoon\" or \"boardwalk,\" as they are more difficult to guess and therefore more secure."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:19
msgid "Anonymous vs Authenticated Web Surfing"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:21
msgid "The distinction between *anonymous web surfing* and *authenticated (logged-in) web activity* is an important one:"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:24
msgid "Anonymous Web Surfing"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:26
msgid "This is the normal experience for a person surfing the web. You type the web address of a web site into your browser and you look at web pages, watch videos, view images, but you don't have to log in. This is why this mode is called anonymous: anyone can do it just by surfing normally."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:33
msgid "**Pro tip**: you can use two different browsers (like Firefox and Chrome), and *not*  log in with one of them. That way you can easily compare how visitors will see your site, and you can spot content that is not yet published."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:36
msgid "Note the presence of the *log in* link in the screen image below. If there is a *log in* link showing, you haven't logged in -- and you are surfing the web site anonymously, as seen in the following screen capture of a new Plone web site:"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:65
msgid "Authenticated (Logged-in) Web Activity"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:67
msgid "You know the *authenticated* mode of web experience if you have ever used a bank or credit card website, or any other website that involved a user account. A bank web site will let you view your account information, fill out information forms, transfer funds, and do other actions, but only after you have logged in."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:70
msgid "A Plone web site is not much different, except that you can do more sophisticated things."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:72
msgid "Compare the screen image below, captured after a user called \"Jane Doe\" has logged in."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:74
msgid "A toolbar has appeared on the left, which has a number of icons and actions that she can perform on the site content. At the bottom of the toolbar, her name is mentioned. A submenu opens when she clicks on this, allowing her to log out and perform various other options. Near the top right you see John Smith's name, this is a drop-down menu with options for managing your settings, and to log out."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:105
msgid "User Roles"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:107
msgid "Equally important is the distinction between different user roles on a Plone web site. To illustrate the simplest case, let's consider two user roles, one called *member* and the other called *manager*. Consider the different rights or \"power\" of these two roles:"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:112
msgid "Member"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:114
#: ../working-with-content/introduction/user-accounts-and-roles.rst:128
msgid "has a user account, so can log in"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:115
msgid "can add content, but only in specific areas, and can't change anything outside of this area; often users are given a \"home area,\" to treat as personal space where they can add content."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:116
msgid "can not publish content so that it is visible to the anonymous web surfer, even content which they added; a person with manager role must approve content for publishing"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:122
msgid "In many organizations, members are allowed to publish content on parts or all of the site. This is a policy that you can set up for each site, or even part of the site"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:126
msgid "Manager"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:129
msgid "can add content anywhere and has the power to change anything"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:130
msgid "can publish any content"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:132
msgid "When you get your new account on a Plone web site, you should be given information indicating where you have the right to add content, after you have logged in."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:134
msgid "After logging in, if you go to a folder where you have rights, you'll see the toolbar contain the appropriate options for *contents*, *view*, *edit* and *sharing* plus even more, depending on the role you have."
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:136
msgid "You'll be able to explore to find the differences between these options, but here are descriptions to help you start:"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:138
msgid "*Contents* - shows a list of items in a folder. Also allows to re-arrange"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:139
msgid "*Edit* - shows a page where you can edit the contents using a familiar editor"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:140
msgid "*View* - shows the view an anonymous web surfer would see"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:141
msgid "*Add new* - shows a sub-menu where you can edit new content items (images, pages, folders, etc.)"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:143
msgid "*State* - shows menu choices for setting publication state (private, public draft, public, etc.)"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:144
msgid "*Display* - shows menu choices for setting the display type (list view, summary view, etc.)"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:145
msgid "*Sharing* - shows a panel for setting rights of other users to see or edit content"
msgstr ""

#: ../working-with-content/introduction/user-accounts-and-roles.rst:147
msgid "The toolbar will offer the main ways you interact with Plone. You will become very familiar with them as you learn more about managing a Plone-powered website."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:2
msgid "Visual Design of Plone Web Sites"
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:4
msgid "Plone allows web site administrators and designers the ability to create unique site designs. Here's an overview of the Plone layout, and some design examples."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:8
msgid "What does a Plone web site look like? For years there has been a consistent design for the default Plone appearance. The default design looks generally like this:"
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:12
msgid "|plone-default-design-areas.png|"
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:14
msgid "The Plone web site you use could have a design radically different from this, but you should be able to find common elements, such as the log in link and a navigation panel or menu. In the default design, the navigation menu is in the left area, and usually appears as an indented list of folders in the site. There also may be a set of tabs in the *Log In, Location Information* strip near the top."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:21
msgid "We can distinguish between the *design* of a web site and the *functionality* of a web site. Quite often, these aspects of a website are also under the control of different people with different skills. A designer will think about the layout, the appearance and the user interface, while a content editor will think about the structure of the information."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:24
msgid "All of these aspects can be strictly separated in Plone, and can be adjusted independent from each other."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:27
msgid "We'll use the default Plone layout design as an example of typical divisions of the screen:"
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:34
msgid "You may need to adapt these terms as needed for your Plone web site design. You may encounter varied terms for describing screen real estate, such as right and left \"slots,\" for the left and right column areas, \"portlet,\" or \"viewlet,\" for discrete areas or boxes, and several other terms."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:40
msgid "For example, we can select three web sites from the `list of Plone web sites <https://plone.org/support/sites>`_ to compare:"
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:47
msgid "This is the web site for Akamai, a leading provider of online web tools and acceleration technology. The header area has simple text menu choices for five main content areas arrayed horizontally at the bottom of the header area. At right, the header contains another horizontal menu and a search box. The bottom of the header area would contain log in information, for use by the maintainers of the web site. The main graphic at top left is a focus area for eye-catching graphics and current topics. There is a main area at left center where the main text is located. The right column holds a series of \"portlets.\" The footer contains a horizontal menu, repeating the menu choices in the header, for convenience. There is a right-most column that has zoom settings."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:63
msgid "This is the web site for Discover Magazine. The header area contains a large horizontal menu, the \"main menu,\" if you will, a smaller horizontal menu at upper right, and a search box. This site is rich with textual \"portlets\" that cover so many topic areas, which are divided into three columnar areas, left, middle, and right. The top of the middle column contains a focus area with a video. There are large interactive boxes in several places. The footer contains basic site identification information and a link to \"about us.\" For a large web site like Discover's, maintainers of the site log in to custom editing screens, and there is much automation of data feeds -- Plone uses Zope, a sophisticated storage system, and Python, a great programming language, which facilitates intelligent \"wiring\" of the flow of text and graphics into the web site."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:81
msgid "The last of the three sites to examine is the web site for Penn State University's Smeal College of Business. The header contains a logo, a horizontal menu for main topic areas, and a search box at right. There is a main menu for this site at left, which is more traditional for a Plone web site. A large graphical area contains a rolling focus animation. There is another small graphical focus in the left column. Three textual columns round out the design, above the basic identification footer. Maintainers of this web site enter by means of a custom log in page, with the log in and user information showing along the bottom of the topmost header area."
msgstr ""

#: ../working-with-content/introduction/visual-design-of-plone.rst:92
msgid "So, what does a Plone web site look like? Traditionally, the out-of-the-box look is like that shown at the top of this page, with header, menu, columns, and a footer. These three sites illustrate how designers typically combine focus areas, vertical and horizontal menus, \"portlets,\" and textual content, usually arrayed in several columns. The underlying machinery is Plone and Zope and Python, but the design \"theme\" or \"skin\" can be made to look any way the designer chooses."
msgstr ""

#: ../working-with-content/logging-in.rst:2
msgid "Logging In"
msgstr ""

#: ../working-with-content/logging-in.rst:6
msgid "What to expect when you log in to a Plone site"
msgstr ""

#: ../working-with-content/logging-in.rst:8
msgid "When you visit a Plone web site anonymously, or are given the web address for site maintenance, you'll see a *log in* button in the top-right corner like this:"
msgstr ""

#: ../working-with-content/logging-in.rst:36
msgid "Your site administrator may have *hidden* the login link, in which case you can go directly to a URL she or he has provided."
msgstr ""

#: ../working-with-content/logging-in.rst:38
msgid "After clicking the *log in* link, you'll see an input panel where you can type in your user name and password:"
msgstr ""

#: ../working-with-content/logging-in.rst:57
msgid "After logging in to a Plone web site you will see some indication of your name, as the last item on the :term:`toolbar`. You can click on your name to perform some actions related to your user, covered in the following sections."
msgstr ""

#: ../working-with-content/logging-in.rst:60
msgid "You (or the site administrator) can allow users to use their email address as login name. This feature can be switched on in the Security settings control panel. The effect is that on the registration form no field is shown for the user name. On the login form the user is now asked to fill in an email address."
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:2
msgid "Automatic Locking and Unlocking"
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:4
msgid "Plone gives you a locking message that will tell you that a document was locked, by whom, and how long ago - so you won't accidentally stomp on somebody else's changes."
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:8
msgid "When somebody clicks on the Edit tab, that item immediately becomes locked. This feature prevents two people from editing the same document at the same time, or accidentally saving edits over another users edits. In this example, George Schrubb has started editing the \"Widget Installation\" document. When Jane Smythe (who has permissions to edit that document as well) goes to view it, she will see the following:"
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:21
msgid "Once George has finished editing the document and clicks the Save button, the document is automatically unlocked and available to be edited by others (should they have the proper permissions to do so, of course)."
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:26
msgid "However, if it becomes clear to Jane that George isn't really editing the document anymore (e.g. the locking message says that the item was locked several days ago and not just a few minutes ago) then Jane can \"unlock\" it and make it available for editing again."
msgstr ""

#: ../working-with-content/managing-content/automatic-locking-and-unlocking.rst:31
msgid "In Plone 3.3 or higher: If a user leaves the edit page without clicking Save or Cancel, the content locking will remain effective for the next ten minutes after which time, the locked content item becomes automatically unlocked. This timeout feature is important for some browsers that do not execute the \"on-unload\" javascript action properly such as Safari. Should you desire to disable locking, go to the Plone control panel (Site Setup -> Site) and uncheck *Enable locking for through-the-web edits*."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:3
msgid "Using Content Rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:5
msgid "This tutorial discusses what content rules are and how to configure and use them."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:8
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:293
#: ../working-with-content/managing-content/working-copy.rst:21
msgid "Overview"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:10
msgid "A general overview as to what makes up a content rule, some sample use cases, and who can set up and use content rules."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:12
msgid "**What is a content rule?**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:14
msgid "A content rule will automatically perform an action when certain events (known as \"triggers\") take place. For example, you can set up a content rule to send an email (the action) whenever certain (or any) content is added to a specific folder (the trigger)."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:16
msgid "**Other use cases for content rules**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:18
msgid "Move content from one folder to another when that content item is published"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:19
msgid "Send email when a content item is deleted"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:20
msgid "Delete content after a certain date"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:22
msgid "**Who can set up and use content rules?**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:24
msgid "Site Manager permissions are required to in order to set up and apply content rules. In the ZMI \"Content rules: Manage rules\" is the permission related to being able to access the content rules configuration pages."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:26
msgid "**What are the triggers and actions that come with Plone 3.0?**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:28
msgid "The following general triggers are available by default:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:30
msgid "Object added to this container"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:31
msgid "Object modified"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:32
msgid "Object removed from this container"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:33
#: ../working-with-content/managing-content/contentrules.rst:195
msgid "Workflow state changed"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:35
msgid "The following actions are available by default:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:37
msgid "Make an entry in the event log"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:38
msgid "Notify user with an information, warning, or error message"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:39
msgid "Copy object to folder"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:40
msgid "Move object to folder"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:41
#: ../working-with-content/managing-content/contentrules.rst:216
msgid "Delete object"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:42
msgid "Transition workflow state of object"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:43
msgid "Send email"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:47
msgid "Creating and Defining Content Rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:49
msgid "How to define content rules using the triggers and actions included in Plone"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:52
msgid "Creating a Rule"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:54
msgid "Content rules are created globally through the Plone Control Pane (\"site setup\" link) and then selected from the Rules tab for the desired folder (or at the Plone site root if you want the rule applied site-wide)."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:56
msgid "In this example, you're going to create a content rule that will send an email any time a Page type is modified."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:58
msgid "Click on \"Content Rules\" from the Site Setup page"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:59
msgid "The first option, \"Enable Globally\", allows you to enable and disable ALL content rules easily. Make sure this is enabled (which is the default) before continuing."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:60
msgid "In the second section of the main page for Content Rules is where any existing content rules will be listed:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:67
msgid "If there are a large number of content rules, it can be useful to filter them based on the triggers in the dropdown menu"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:69
msgid "If no content rules exist, the only option is an \"Add content rule\" button. Click that."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:70
msgid "An \"Add Rule\" form comes up. Enter a descriptive title -- for this example, use: \"Send Email when any Page is Modified\". Enter a description if desired."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:71
msgid "For the \"Triggering event\" select \"Object modified\". Leave \"Enabled\" checked, and \"Stop executing rules\" unchecked."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:78
msgid "Click the \"Save\" button. At this point, you have essentially created a \"container\" for the content rule:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:85
msgid "Next you'll further define the trigger and actions for this rule."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:89
msgid "Defining a Content Rule"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:93
msgid "After creating a content rule, you need to actually define the specific conditions of the trigger and actions that will occur based on those conditions."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:94
msgid "Click on the title of your content rule, in this case \"Send Email when any Page is Modified\"."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:95
msgid "Two new sections will show up for setting the conditions and actions:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:101
msgid "**For the condition:**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:103
msgid "By default, \"Content type\" is selected and since you want a trigger only for Pages, just click on the \"Add\" button."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:104
msgid "From the \"Add Content Type Condition\" page, select \"Page\" and click on \"Save\":"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:110
msgid "**For the action:**"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:112
msgid "Select \"Send email\" from the drop down menu and click on the \"Add\" button."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:113
msgid "From the \"Add Mail Action\" page, fill out the form:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:114
msgid "For the \"Subject\" enter: \"Automated Notification: Page Modified\""
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:115
msgid "\"Email source\" is the From: address and is optional"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:116
msgid "\"Email recipients\" is the To: address; enter a valid email address"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:117
msgid "For the \"Message\" enter what you want for the body of the email:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:123
msgid "Click the \"Save\" button"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:127
msgid "Congratulations, you have created a working content rule! Your content rule should look like:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:133
msgid "In the next section, you'll learn how easy it is to apply this content rule to any part (or all) of your Plone site."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:137
msgid "Assigning a Content Rule"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:139
msgid "Now that you've set up a content rule, how does it actually get used?"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:141
msgid "At this point, you have successfully created a content rule. However, this content rule isn't actually in use until it has been assigned and enabled on one or more folders."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:143
msgid "Navigate to the folder where you want the content rule to be in effect. This can be any folder on the Plone site or it can be for the entire Plone site (\"Home\")."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:144
msgid "Click on the \"Rules\" tab. From there you will see a drop down menu of possible content rules:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:150
msgid "Select the desired content rule (\"Send Email...\" in this example) and click on the \"Add\" button. The \"Rules\" tab now shows that your rule has been assigned to the current folder:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:156
msgid "By default, the rule has now been applied to the current folder only as indicated by the symbol in the \"Enabled here\" column indicates."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:159
msgid "Notice there are several buttons near the bottom. Tick the check box for the rule you want (\"Send Email...\") and then click on either \"Apply to subfolders\"  button. Now this content rule will also apply to any subfolder that exist now or are created in the future. If you wish to have this rule apply to all the subfolders but not to the current folder, then tick the check box next to the rule and click on the \"Disable\" button."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:164
msgid "Note: that the \"Enabled here\" column is empty for this rule now. You will need to explicitly use the \"Enable\" button to re-active this rule for the current folder; just using the \"Apply to current folder only\" button will NOT re-enable the content rule."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:166
msgid "Basically, the \"Apply to subfolders\" and \"Apply to current folder only\" can be thought of as toggles. You can test this rule now by creating a new Page or modifying an existing Page. Once you click on \"Save\" for that Page, an email will be sent."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:171
msgid "Managing Multiple Rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:173
msgid "Now that you've created, defined, and assigned one content rule, it's time to explore how multiple rules work together."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:175
msgid "In this section you'll need to create one or more additional rules before proceeding. Try one of these for size:"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:177
msgid "Send an email when a News Item is deleted. Move News Items to a Folder when that News Item is published Send an email whenever a News Item is modified."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:185
msgid "More on Triggers. Actions, and Assigning Rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:187
msgid "In-depth information covering each of the triggers and actions available and notes on applying content rules."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:190
msgid "Triggers"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:192
msgid "Object added to container"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:193
msgid "Object modified (note: this gets triggered on creation for a Page -- because it's renamed?)"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:194
msgid "Object removed"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:199
msgid "Conditions"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:201
msgid "Content type"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:202
msgid "File extension"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:203
msgid "Workflow state: restricts rules to objects in particular workflow states"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:204
msgid "Workflow transition: restricst rules to execute only after a certain transition"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:205
msgid "User's group"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:206
msgid "User's role"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:210
msgid "Actions"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:212
msgid "Logger"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:213
msgid "Notify user"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:214
msgid "Copy to folder"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:215
msgid "Move to folder"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:217
msgid "Transition workflow state"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:218
msgid "Mail action"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:222
msgid "Assigning rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:224
msgid "Rules tab on the folder"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:225
msgid "rule name is in the drop down"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:226
msgid "select rule, click on add"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:227
msgid "enable / disable"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:228
msgid "apply to subfolders / apply to current folder only"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:229
msgid "unassign"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:233
msgid "Things to note when \"navigating\" with assigned content rules"
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:235
msgid "The \"Edit Content Rule\" page uses a 'related items' like display (\"Assignments\") for listing all the locations where the rule is assigned. From there, you can go directly to that folder's Rules tab by clicking on the Title of that folder. Note that there is no indication in the Assignments section if the Rule is applied to subfolders or not."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:241
msgid "If you're on a folder that has the rule assigned to it directly (e.g. it's NOT a subfolder of a folder that has the rule assigned), you can get directly to the \"Edit Content Rule\" page from the Rules tab by clicking on the Title of that rule (which is always a link)."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:243
msgid "Alternately, if you're on a folder that has the rule assigned from a folder higher up in the hierarchy, clicking on the rule Title link will take you to the folder's Rules tab where the rule has been explicitly assigned."
msgstr ""

#: ../working-with-content/managing-content/contentrules.rst:245
msgid "If from the Rules tab, a rule is listed at active, then the assignment of that rule is being managed from a parent folder."
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:2
msgid "Cutting, Copying and Pasting Items"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:4
msgid "Cut, copy, and paste operations involve moving one or more items from one folder to another."
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:8
msgid "Cut/Paste"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:10
msgid "Moving items from one area to another on a website is a common task. Often this need arises with placement of content in the wrong folder. For example, if the author of the following content about Skipper butterflies realizes that a Swallowtail butterfly was mistakenly included -- the Eastern Tiger Swallowtail folder shown below -- the folder can simply be moved with a *cut*/*paste* operation:"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:21
msgid "Note that the Eastern Tiger Swallowtail folder has been checked, and that the *cut* button is about to be clicked. After clicking the *cut* button, the screen will show a new *paste* button. The Eastern Tiger Swallowtail folder and all of its contents are now in the web site's \"memory.\" The Eastern Tiger Swallowtail folder does not immediately disappear, however, awaiting the actual *paste* operation. The *paste* button is now highlighted to show the cut/paste operation is in progress:"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:34
msgid "The *paste* button is now active. The next step is to navigate to the destination folder, in this case the Swallowtails folder:"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:41
msgid "After clicking the Swallowtails folder, the *paste* button will continue to show, because the paste operation has not yet been completed:"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:48
msgid "And last, clicking the *paste* button for the destination folder adds the Eastern Tiger Swallowtail folder to its proper place in the Swallowtails folder, and cuts it from the original location, the Skippers folder, and the *cut*/*paste* operation is complete:"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:57
msgid "The *paste* button remains active, because you would be allowed to continue pasting the folder in other places if you wanted. This could happen in several situations, including when you need to copy one page, for example, as a kind of template or basis document, into several folders."
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:64
msgid "Copy/Paste"
msgstr ""

#: ../working-with-content/managing-content/cutting-copying-and-pasting-items.rst:66
msgid "A *copy*/*paste* operation is identical to the *cut*/*paste* operation, except that there is no removal of content from the original folder. It works as you would expect it to work."
msgstr ""

#: ../working-with-content/managing-content/deleting-items.rst:2
msgid "Deleting Items"
msgstr ""

#: ../working-with-content/managing-content/deleting-items.rst:4
msgid "Items may be deleted from a folder with ease."
msgstr ""

#: ../working-with-content/managing-content/deleting-items.rst:6
msgid "Sometimes it is necessary to delete a content item, often to replace it with an updated version. Or, you could simply delete an item, for a variety of reasons. In the example of the swallowtail butterfly mistakenly added to the Skippers folder, instead of cutting it and pasting it somewhere, it could simply be deleted:"
msgstr ""

#: ../working-with-content/managing-content/deleting-items.rst:16
msgid "In the example shown above, the *Eastern Tiger Swallowtail* folder is will be deleted after clicking on the *Delete* button."
msgstr ""

#: ../working-with-content/managing-content/deleting-items.rst:19
msgid "Entire folders may be deleted, so care must be taken with the delete operation, but this is true for computer use in general, and we all have learned to do a last minute self-check to make sure the delete operation is intended."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:2
msgid "Editing Content"
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:4
msgid "Editing Plone content works the same as adding content -- usually the data entry and configuration panels for the content are the same for editing as for adding."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:6
msgid "Of course, when we edit an item of content, the item already exists. Click the Edit tab for an item and you will see the data entry panel for the item, along with the existing values of the item's data."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:9
msgid "For an example of something really simple, where editing looks the same as adding, we can review how to edit a folder."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:11
msgid "The *Edit* panel for a folder simply shows the title and description input areas. Often a description is not provided for a folder, so the only thing changed is the title."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:17
msgid "If you do wish to give a description, which is a good idea for distinguishing folders in a list, the description can be text only -- there is no opportunity for setting styling of text, such as bold, italics, or other formatting. This keeps the descriptions of Plone content items as simple as possible."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:19
msgid "Here is the *Edit* panel for a folder, in this case, one called \"Butterflies\":"
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:26
msgid "That's it. Change what you want and save, and the content item will be updated in Plone's storage system. You can repeatedly edit content items, just as you can repeatedly edit files on your local computer."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:31
msgid "By now you have appreciated that Plone stores discrete content items as separate entities, akin to \"files\" on a local computer, but you really don't have to think about it that way. Plone is a content management system, where the content comes in the form of numerous discrete content items that may be individually edited. Edit away at your heart's content."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:35
msgid "For an example of editing a content item that is a bit different than adding in the first place, we can examine editing an image. Editing an Image can be done by navigating to an individual image and clicking the *Edit* tab. Clicking the *Edit* tab for the image, you will see the following *Edit Image* panel:"
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:42
msgid "Here, an image called \"Eastern Tiger Swallowtail Butterfly\" is being edited."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:45
msgid "You can change the title and description, as usual, in which case you would usually keep the setting to \"Keep existing image.\" You can also change the image itself by checking the \"Replace with new image\" choice. Or, clicking the \"Delete current image\" choice will simply delete the image entirely."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:49
msgid "Notice also the *Transform* tab at the top, which pertains specifically to images, offering a choice of several image transforms:"
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:56
msgid "So, editing an image is a bit different than adding one in the first place, but not by much."
msgstr ""

#: ../working-with-content/managing-content/editing-content.rst:58
msgid "Editing panels for other content items are also usually just like the panels for adding."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:2
msgid "Folder Contents"
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:4
msgid "The Contents tab shows a list of items in a folder. It is the place for simple item-by-item actions and for the manipulative actions of copy, cut, paste, move, reorder, etc."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:8
msgid "The Contents tab for folders is like \"File Manager\" or \"My Computer\" system utilities in Windows and Linux desktops and the \"Finder\" in Mac OS X, with similar functionality."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:12
msgid "Clicking the *Contents* tab for a folder, such as the \"Skippers\" folder below, shows the *Contents* tab panel:"
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:19
msgid "folder-contents.png"
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:21
msgid "The *Contents* tab panel is immediately recognized by observing the check boxes beside the items in the contents list. Click these check boxes to select multiple items for performing *copy*, *cut*, *rename*, *delete*, or *change state* operations."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:26
msgid "Plone has a clipboard for *copy* and *cut* operations. If you check one or more items, and click cut or copy, a paste button will be added to the row of buttons along the bottom of the panel. If you then click another folder, you'll be able to paste the items there. For a cut operation, the items will remain in the source folder -- they won't disappear -- until they are pasted somewhere."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:33
msgid "*Renaming* items will show a panel for entering a new name for the *short name* (or *id*) of the item, as well as the *title*. The distinction between *short name* and *title* is one that becomes apparent only when you rename, because Plone automatically creates the *short name* from the *title* in most Plone web sites. But the renaming operation must show you the *short name* as well as the *title*, because usually would want to change both, if changing either. Consider the following example:"
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:48
msgid "If you were to change the title to \"Long-tailed Skippers,\" you would also change the short name to \"long-tailed-skippers.\" This keeps things tidy -- it keeps them correct, so that the URL for the item, the web address, is kept up-to-date with the actual content item. Note that the short name should contain no blanks. Use dashes for any blanks in the title, and otherwise make it a carbon copy of the title. Also, use lowercase for the short name. See also the page \"`What's in a Web Name? <https://plone.org/documentation/manual/plone-4-user-manual/adding-content/whats-in-a-web-name>`_\" for a description of how Plone handles web addressing and the short name."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:59
msgid "The *delete* operation is straightforward. Click to select one or more items, and then the delete button, and the items will be deleted."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:62
msgid "The *change state* operation offers a great way to change the publication state of a selection of folders, and their subfolders if you select this option. In the following example, the publication state for a folder called \"Long-tailed Skippers\" is being modified. Checking the \"Include Folder Items\" will make the state change affect all contained content. Don't forget that you can do this to, say, three folders at a time, and all of their subfolders and contained content, so that in one fell swoop you can quickly publish, unpublish, etc."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:71
msgid "*Shift-clicking* to select a range of items works. This could be very handy for a folder with more than a dozen items or so, and would be indispensable for folders with hundreds of items."
msgstr ""

#: ../working-with-content/managing-content/folder-contents.rst:79
msgid "In addition to these individual action operations, reordering is a natural mouse-driven manipulation, as described in the next section."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:2
msgid "Folder View"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:4
msgid "Folders have the Display tab which controls the several ways of showing folder contents."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:7
msgid "For most content items, if you want to change how it looks, you edit the content directly. But folders are a different animal. As containers of other items, folders can display their contents in a variety of ways. We'll cover each of the options in this section."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:12
msgid "Consider a scenario where a butterfly enthusiast, John Smith, has logged in to his web site to work on the part devoted to Skipper butterflies. He navigates to the \"Skippers\" folder by clicking the top tabs of the web site, or the navigation menu, which is on the left in his default Plone web site design. When he clicks the \"Skippers\" folder, the standard view tab panel, or just \"standard view,\" for the folder is shown:"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:26
msgid "The *View* is always how a content item would show for anonymous web site visitors. Click the *View tab* when you want to see what a content item looks like after you have changed something. For folders, you will see a listing of contained content items, in one of several list presentations, selected via the *display* pull-down menu. The default view is called *standard view*:"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:37
msgid "And, here is *summary view*:"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:43
msgid "And, *tabular view*:"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:49
msgid "And, *thumbnail view*, which is mainly useful for photographs, but still works for normal content:"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:56
msgid "Making a photo album is easy. Just add the photographs (images, or image files, the most common being .jpg files) to a folder and set the display view for the folder to **thumbnail view**. Thumbnail view will automatically update the display as images are added to the folder, presenting a multi-page division into sets of images, as needed, as the number of images grows."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:63
msgid "If you are uploading photographic images from a digital camera or scanner, you will most likely want to resize them on your local computer before uploading them, because they are too large."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:68
msgid "Setting an Individual Content Item as the View for a Folder"
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:70
msgid "The basic list view functionality described above for folders fits the normal way we think of folders -- as containers of items -- but Plone adds a nice facility to set the view of a folder to be that of any single item contained within the folder. This takes advantage of the way the navigation system dynamically reflects the folder structure of a Plone web site as folders are created."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:77
msgid "You can set the display view for a folder to show a single page, which can be useful for showing the most recent document within a list of documents stored in the folder. Or, you can set it to a collection, which on its own is already a powerful content filter. The display view setting should be used with care, because it changes the behavior of folders, from acting as simple containers to acting as direct links to content. Instead, you can often accomplish what you want by only using collections, which will be covered later in this manual."
msgstr ""

#: ../working-with-content/managing-content/folder-view.rst:87
msgid "Next, we move to the *Contents* tab to see important functions for accessing content in a list of folder content."
msgstr ""

#: ../working-with-content/managing-content/index.rst:2
msgid "Managing Content"
msgstr ""

#: ../working-with-content/managing-content/index.rst:4
msgid "The contents tab is the place where content items can be copied, cut, pasted, moved, renamed, etc."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:3
msgid "Adding CAPTCHA Support"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:7
msgid "PloneFormGen has built-in support for Re-Captcha. This howto-tells you how to enable it."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:10
msgid "PloneFormGen and CAPTCHA Fields"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:12
msgid "When PFG is installed in a Plone instance via add/remove products, it will look for evidence that either collective.captcha or collective.recaptcha are available. If that's found, the CAPTCHA Field will be added to the available field list."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:14
msgid "If you are using collective.recaptcha, you need to take the additional step of setting your public/private keypair. You get these by setting up an account at recaptcha.net. The account is free. You may specify your keypair in the PFG configlet in your site settings."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:18
msgid "If you add a captcha facility *after* installing PFG, you will need to reinstall PFG (via add/remove products) to enable captcha support."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:21
msgid "Installing collective.recaptcha"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:23
msgid "Add the following code to your buildout.cfg to install collective.recaptcha and Products.PloneformGen together:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:36
msgid "Re-run bin/buildout and relaunch your zope/plone instance."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:37
msgid "Open the PortalQuickinstaller or plone control panel and install (or reinstall if already installed) PloneFornGen."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/captcha.rst:38
msgid "Open the PloneFormGen configlet in the Plone control Panel and fill in the fields with your Public and Private Keys of your ReCaptcha Account. Obtain keys from `reCaptcha.net <http://www.google.com/recaptcha/whyrecaptcha>`_."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:3
msgid "Creating content from PFG"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:7
msgid "This how-to covers simple creation of portal content from PloneFormGen. We'll create web pages from sample form submissions."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:9
msgid "A question that's come up frequently on IRC and the Plone users' mailing list is \"How do I create an event, news item, page, or some other content item from PloneFormGen? It's common that there's some security need or extra content needed that prevents just using Plone's \"add item.\""
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:11
msgid "This is actually very easy if you know a little Python and are willing to learn something about the content items you want to create."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:13
msgid "Please note that I'm not going to show you how to create new content types here. Just how to use PFG to create content objects from existing types. If you want to create new content types, learn to use Archetypes."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:15
msgid "Your first step should be to determine the attributes you want to set in the new content item and how they'll map from your form fields."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:17
msgid "In this case, we're going to use the sample contact form created when you first create a form folder to create a page (Document)."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:19
msgid "Our mapping of form fields to content attributes will look like this:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:21
msgid "Form Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:22
msgid "Document Attribute"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:23
msgid "Your E-Mail Address (replyto)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:25
msgid "Subject (topic)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:28
msgid "Comments (comments)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:28
msgid "Body text"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:30
msgid "Note that for each form field, we've determined its ID in the form. We'll use those to look up the field in the form submission."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:32
msgid "Next, we need to learn the methods that are used to set our attributes on a Document object. How do you learn these? It's always nice to read the source, but when I'm working fast, I usually just use DocFinderTab and look for \"set*\" methods matching the attributes."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:34
msgid "Now, determine where you want to put the new content. That's your target folder. It's convenient to locate that folder in a parent folder of the form object, as you may then use the magic of acquisition to find it without learning how to traverse the object database."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:36
msgid "Now, in the form folder, we add a \"Custom Script Adapter\" - which is just a very convenient form of Python script. Then, just customize the script to look something like the following:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:72
msgid "That's it. This will really work."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:75
msgid "Security"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:77
msgid "At the moment, the person that submits your form will need to be logged in as a user that has the right to add pages to the target folder, then change their attributes. You may need to allow other users (even anonymous ones) to submit the form. That's where the Proxy role setting of the custom script adapter comes in. You may change this setting to Manager, and the script will run as if the user has the manager role - even if they're anonymous."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:79
msgid "I hope it's obvious that you want to be very, very careful writing a script that will run with the Manager role. Review it, and review it again to make sure it will do only what you want. Never trust unchecked form input to determine target or content ids."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:81
msgid "If I'm doing this trick with a form that will be exposed to the public, I often will use a Python script rather than the custom script adapter, as it allows me to determine the proxy role for the script more precisely than choosing between None and Manager. I may even create a new role with minimal privileges, and those only in the target folder. Credit!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/creating_content.rst:87
msgid "A big thank's to Mikko Ohtamaa for contributing the Custom Script Adapter to PloneFormGen."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:3
msgid "Adding Custom Fields, Action Adapters or Thanks Pages"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:7
msgid "You may add custom fields, action adapters and thanks pages to PloneFormGen. By far the easiest way to do this is to derive a subclass from one of the field types in fieldsBase or an action adapter from actionAdapter.FormActionAdapter."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:12
msgid "When PFG is installed, or reinstalled, it will automatically add to its available fields, adapters and thanks pages list any installed Archetypes content type that implements one of:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:16
msgid "Products.PloneFormGen.interfaces.actionAdapter.IPloneFormGenActionAdapter"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:18
msgid "Products.PloneFormGen.interfaces.field.IPloneFormGenField"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:20
msgid "Products.PloneFormGen.interfaces.thanksPage.IPloneFormGenThanksPage"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_addons.rst:22
msgid "Also, the Archetypes class *must* specify a meta_type in the class definition that matches the meta_type defined in its GS type declaration. Otherwise, it won't be found."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:3
msgid "Custom mailer script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:7
msgid "Customizing email output from PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:12
msgid "Below is an email script example to customize how PloneFormGen generates the email output."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:15
msgid "Installation instructions"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:17
msgid "Go to form, on the contents tab remove the existing Mailer item."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:19
msgid "Choose create new... Custom script adapter. Pick any name."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:21
msgid "For the script, set Proxy role: Manager."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:23
msgid "Fix the email addresses in the script below."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:25
msgid "Paste the code to the script body field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:27
msgid "Save."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:29
msgid "Test."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_mailer.rst:32
msgid "Example script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:3
msgid "Customizing an individual thanks page"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:7
msgid "It's not hard to customize the thanks page for an individual form. This trick is particularly useful for purposes like adding 'pay now' buttons."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:9
msgid "If you can tolerate a little work in the Zope Management Interface, you'll find it very easy to customize the Thanks Page for an individual form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:11
msgid "The steps:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:14
msgid "Create your form;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:16
msgid "Bring up the Zope Management Interface; navigate to portal_skins/PloneFormGen;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:18
msgid "Open the fp_thankspage_view template; push the Customize button; this puts an editable copy of the thanks page template in your custom skin folder."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:20
msgid "Step back to the Custom folder listing (still in the ZMI); cut the fp_thankspage_view template;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:22
msgid "Navigate to your form folder; paste it there."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:24
msgid "Edit the template to insert your Pay/Donate Now form and button code, or whatever other custom code you might need just for this form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_thanks.rst:28
msgid "Note: If there is already an fp_thankspage_view template in your custom skin folder (perhaps because you've already customized the template for the site), you'll be cutting and pasting a new copy."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:3
msgid "Creating custom validators"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:7
msgid "PloneFormGen allows you to create a custom field-input validator by specifying a TALES expression that will be used to validate input when it's submitted. This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:9
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:11
msgid "`Template Attribute Language Expression Syntax` (TALES) is a simple notation that allows determination of a value via path (as in path/to/object), string or Python expressions. It is used in `Zope's Template Attribute Language` (TAL), and is ubiquitous in Plone templates. This how-to does not teach you TALES; for that, try the `Zope Page Templates Reference <http://www.plope.com/Books/2_7Edition/AppendixC.stx#1-10>`_."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:13
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:15
msgid "Please note that it's easy to make a mistake when working with TALES fields that will cause an error when you try to display your form. Stay calm! Take note of the error message, and return to the field edit form to fix it. Don't be scared of this kind of error."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:15
msgid "The rules for writing a validator are:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:17
msgid "You should validate against the the variable value, which will contain the field input. Note that -- for simple fields -- value will be a string. But, for a lines field, the contents of value will be a list."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:19
msgid "Return False or zero if you wish to accept the input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:21
msgid "Return a string containing a user-feedback message if you don't wish to accept the input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:23
msgid "Don't change the value variable. It won't do you any good."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:26
msgid "A simple example"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:28
msgid "Let's say that you are operating a restaurant that serves only dishes containing spam. You may wish to check to make sure that the input to a string or text field contains \"spam\". You may do that with by setting a custom validator that reads::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:32
msgid "The odd logic comes from the need to return `False` for valid input. Look at a couple of examples of validation in action with literal strings. Remember, we want to force spam on the user:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:43
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:44
msgid "The name space"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:45
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:46
msgid "Here are the objects available when your expression is evaluated."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:48
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:49
msgid "TALES context"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:50
msgid "value"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:51
msgid "The field input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:52
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:51
msgid "here"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:53
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:52
msgid "The current object. A bit dangerous since this varies depending on context."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:54
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:53
msgid "folder"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:55
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:54
msgid "This will be your form folder."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:56
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:55
msgid "portal"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:57
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:56
msgid "The portal object."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:58
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:57
msgid "request"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:59
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:58
msgid "The REQUEST object. Note that request/form contains form input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:60
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:59
msgid "member"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:61
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:60
msgid "The authenticated user's member data -- if any."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:62
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:61
msgid "nothing"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:63
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:62
msgid "Equivalent to Python None."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:64
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:63
msgid "folder_url"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:65
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:64
msgid "URL of the form folder."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:66
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:65
msgid "portal_url"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:67
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:66
msgid "URL of the site."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:69
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:68
msgid "modules"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:69
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:68
msgid "Module importer."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:73
#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:72
msgid "Some of these identifiers are supplied by PloneFormGen and are not available in other contexts."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:76
msgid "Using a Python script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:78
msgid "You'll be frustrated fast if you try to do anything smart in a single TALES expression. If you need to do something more complicated, add a Python Script to your form folder and call it via TALES. For example, if you added a script with the id includesSpam, you could call it with the expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:82
msgid "Make sure your script returns False if you wish to accept the input, or an error string otherwise."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:84
msgid "Here's what a validator script to check for spam might look like::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:91
msgid "Make sure your script parameter list includes value. (Alternatively, you may check the request.form dictionary, which will include form input.)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/custom_validators.rst:96
msgid "Python scripts are not the same as the Custom Script Adapter. The latter is meant to make it easy to add a custom adapter that's processed in the same way as the mail or save-data adapter. Python scripts are just simple Python code fragments that act like functions. They are added via the Zope Management Interface"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:3
msgid "Embedding PloneFormGen forms"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:7
msgid "PloneFormGen forms may be rendered from other templates, viewlets, and portlets."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:11
msgid "This feature requires Plone 3.0 or later to work out of the box.  You can make it work in Plone 2.5 by turning on the PLONE_25_PUBLISHER_MONKEYPATCH config option, which applies a monkey patch to the Zope publisher exception hook based on some code included in Plone 3."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:16
msgid "*Caveat*: This feature should be considered beta quality.  I've written code that takes advantage of it, and you shouldn't be afraid of it, but take care to test thoroughly.  There may be certain types of contexts for rendering the form with implications that I haven't taken into consideration."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:21
msgid "To insert the form into an arbitrary template, use the 'embedded' browser view::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:25
msgid "If you are including the form on a page that features another form, you'll probably need to set a prefix on the 'embedded' view to disambiguate submissions::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:32
msgid "Or if you are using a view class, you could define a method like::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:41
msgid "(Note that restrictedTraverse expects a path relative to the object you are calling it on, with no initial slash.)  And then in the associated template::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:46
msgid "By default the embedded form uses the current URL as the form's 'action' parameter. When the form is rendered upon submission, it will perform validation, run the normal action adapters, and redirect to the success page as normal.  If you want to submit to the form's real location or somewhere else, you can override the action by setting the 'action' attribute on the 'embedded' view."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/embedding.rst:52
msgid "*Known limitation*: Embedded forms have no way of injecting javascript or CSS into the page head like their standalone counterparts."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:2
msgid "Fail-safe email sending"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:4
msgid "By default if SMTP server rejects the message send by PloneFormGen the page will crash with an exception. Possible reasons for SMTP failure are"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:7
msgid "SMTP server is down"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:9
msgid "SMTP server is overloaded"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:11
msgid "SMTP server spam protection is giving false positives for your email sending attempts"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:13
msgid "If you have a situation where gathering the data is critical the following process is appropriate"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:16
msgid "Use save data adapter to save results"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:18
msgid "Use a custom email sender script adapter to send email and even if this step fails then the data is saved and no exception is given to the user"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/failsafe_email.rst:21
msgid "Example PloneFormGen script adapter (using proxy role Manager)::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:3
msgid "Frequently Asked Questions"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:8
msgid "Q. How can I make a date/time field default to current time?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:10
msgid "In the field's \"overrides\" fieldset, specify as Default Expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:14
msgid "Note that you may do some simple date arithmetic. To set the default a week after server time, use::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:20
msgid "Q. I've made an error in a TALES expression, and now I can't view or edit my form!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:22
msgid "An error in a TALES override may prevent you from viewing the form, but it shouldn't stop you from editing it."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:24
msgid "To edit, navigate to the form (you'll see your error)."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:26
msgid "If the error is in a form override, add \"/atct_edit\" to the end of the URL to reach the editor. That will allow you to reach the form editor; now go to the overrides fieldset and fix the problem."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:27
msgid "If the error is in a field override, add \"/folder_contents\" to the end of the URL to reach the folder contents. Click on the troubled field; you'll again get an error. Now, add \"/atct_edit\" to the end of the URL to reach the editor."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:30
msgid "Q. How do I make a field default to the member's name/address/id?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:32
msgid "In the field's override fieldset, set the Default Expression to::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:36
msgid "memberEmail is a method of the form folder which will return a member's e-mail address, if one is available, and an empty string otherwise."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:38
msgid "You may also use \"here/memberFullName\" to get the member's name, and \"here/memberId\" to get the login id."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:42
msgid "memberEmail, memberFullName and memberId are just a convenience facility of PloneFormGen. They are not part of the Plone API."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:45
msgid "Q. Where is the encryption option?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:47
msgid "I understood PFG could GPG encrypt mail, but can't find the option to do it."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:49
msgid "Navigate to your mail adapter and edit it. Look in the fieldset list (the list of bracketed sub-forms at the top of the form). Do you see an encryption field set title? If so, you've found the option. If not, it means that PFG was unable to find the gpg binary when it started. Read the README_GPG.txt file in the PFG product folder for details on how to solve this problem."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:52
msgid "Don't forget that after you install GnuPG, you'll need to restart Zope or refresh your PFG product. Where is the save-data adapter?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:56
msgid "Q. I've just added a form folder, and the action adapter list only includes \"None\" and \"Mailer\". Where is the save-data adapter?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:58
msgid "You need to add it to the folder via the add-item drop-down."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:60
msgid "A mailer adapter is in the \"sample\" form created when you add a form folder because it's probably the most common use. Other adapters need to be added."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:63
msgid "Q. Why are these action adapters content types? Why aren't they just built into the form folder?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:65
msgid "There are several reasons. One is that doing it this way makes it easy to copy configured action adapters from one form to another. How do I specify a recipient e-mail address?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:69
msgid "Q. When I attempt to submit a form, I get an AssertionError \"You must specify a recipient e-mail address in the mail adapter.\""
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:71
msgid "The error is occurring because PloneFormGen doesn't have a recipient address to which to mail the form input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:73
msgid "To fix this, choose the contents tab of your PFG form folder. Navigate to the mailer and use its edit tab. Choose the \"addressing\" fieldset and specify a recipient address."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:75
msgid "By the way, if the recipient address isn't specified, PFG tries to use the e-mail address of the form folder's owner. So, you'll only see this error if you've failed to set an e-mail address in personal preferences."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:78
msgid "PloneFormGen missing from Add list?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:80
msgid "I installed the release of PloneFormGen in my Products directory in Plone 2.5.x, and neither the ZMI (/Control_Panel/Products) nor Plone (Quick Installer) seemed to recognize it after restarting my Zope."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:82
msgid "Zope has probably encountered an error in the course of loading the product."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:84
msgid "Try checking your event.log for related error messages. You may wish to try starting Zope in foreground mode (bin/zopectl fg for a standalone zope) for more diagnostics."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:87
msgid "How do I add a hidden field with the username?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:89
msgid "Create a string field and mark it hidden."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:91
msgid "On the overrides tab, set \"here/memberId\" for the Default Expression."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:95
msgid "To follow this recipe, you'll need to have permission to edit TALES fields."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:98
msgid "Q. Dynamically populate selection fields?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:100
msgid "Can I dynamically populate selection and/or multi-selection fields in PloneFormGen?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:102
msgid "Yes, just use the [overrides] panel of the field's edit view to set an Options Vocabulary."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:104
msgid "It should be a TALES expression that evaluates as a list of value/label lists (tuples are also OK)."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:106
msgid "For example, let's say that we wanted a selection field populated with option values '1', '2', '3', '4' and matching visible labels 'one', 'two', three', 'four'. The TALES code for this would be::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:110
msgid "It's unlikely, though, that you'll be able to do what you need in a single line of TALES. So, a more typical use would be to create a python script that returns a sequence of value/label sequences. If you put that script in your form folder, you can just fill in::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:114
msgid "in your Options Vocabulary field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:117
msgid "Q. Could a selection field in a FormFolder be used to redirect?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:119
msgid "I have created a custom FormFolder, using PloneFormGen. Within the FormFolder, I have created a page and added a selection field with value/label pairs equivalent to: path (url) | company department -->i.e. http://my.site/reports/accounting|Accounting I am wondering if it is possible to create an action override that would 'redirect_to' the 'selected' value in the selection field, something like: 'redirect_to:string: ' If so, how might I access the value from the selection field?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:121
msgid "For the redirection, just put something like::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:125
msgid "in the Custom Success Action field on the form folder's [override] panel."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:127
msgid "If you need to do something more complicated, you can use the \"Custom Script Adapter\" in the 1.1 alpha and end your code with::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:133
msgid "Use a \"From\" address other than the site address?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:135
msgid "One stock-field is called replyto and contains a valid email address. I want this address to be in the From: line - not just in Reply-To:. So I could fill in a TALES expression to overwrite the default sender-address. But what's the correct TALES expression for that?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:137
msgid "By default, PloneFormGen's mailer sends mail with the \"From\" address set to the site's global \"From\" address (specified in site setup / Portal Settings). That's the standard return address for portal-generated mail, but you may wish to use another."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:139
msgid "In the mailer's overrides sub-form, set the Sender Expression to::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:143
msgid "to use the address filled in for the \"replyto\" form field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:145
msgid "You could also specify a literal::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:149
msgid "Be cautious about using user-submitted addresses for the \"From\" address. It's important that the \"From\" address be a real one, owned by a responsible person."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:152
msgid "Q. Can I integrate my favorite field/widget?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:154
msgid "I'd like to integrate a new field/widget into PloneFormGen so that it will be useful as a form field in a PFG form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:156
msgid "PFG is designed to allow this, but it's going to take some programming by you or the field developer. See the PFG \"examples\" directory for a heavily commented, really working, example of integrating a third-party field into PloneFormGen without touching the PFG or field code. How do I save the uploaded file from \"file field\"?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:160
msgid "Q. Captcha field is not accessible?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:162
msgid "Or, not always readable for some people with low vision, or using mobile this type of control is strongly blocking"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:164
msgid "To effectively replace a Captcha, just add a text field mandatory (must match the size of two char. Max.) That can be called eg 'Filter' as help text with the following question: \"to avoid spam can you answer this question: 7+2-1 = ?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/faq.rst:166
msgid "Next, modify the object and choose the menu 'overrides' and fill in the \"custom validator\" by this expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:3
msgid "Getting Started with PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:7
msgid "Learn the basics of creating web forms with PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:14
msgid ":doc:`Please read general PloneFormGen information first </working-with-content/managing-content/ploneformgen//index>`"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:17
msgid "Getting Started"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:21
msgid "The best place to start for non-technical Plone users."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:23
msgid "To get started building a custom form using PloneFormGen, you must first create a **Form Folder**. A form folder is a lot like a normal Plone folder - you use it to organize and hold other types of content. The Form Folder also has some settings of its own that will control the behavior and appearance of the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:25
msgid "Click *Add Item* and choose Form Folder from the drop-down menu."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:31
msgid "Create the form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:33
msgid "Provide a *Title* and *Description* for the form. You can also change the wording of the *Submit* or *Reset* button if you wish."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:35
msgid "Ignore the rest of this edit screen for the time being and just click *Save* at the bottom."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:42
msgid "Form Folder Settings"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:46
msgid "Learn how to configure your form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:48
msgid "You now have a basic form to work with. By default, a form starts with *E-Mail Address*, *Subject* and *Comments*. These are fields you get automatically, every time you create a new form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:54
msgid "Adding text to the form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:56
msgid "Before you learn how to add new fields, or change existing ones, let's look at how you can add some simple text above and below the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:58
msgid "You may want to include instructions to your site visitor about how to fill out your form, or what the purpose of the form is supposed to be. You can add that descriptive text as follows:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:60
msgid "Edit the Form Folder by clicking on Edit in the taskbar"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:62
msgid "Now you'll see two Body Text areas called Form Prologue and FormEpilogue (which means before and after). Use the text editor to format your content, include links, and even pictures. Click Save when you're all done."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:68
msgid "Overrides"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:70
msgid "When in the *Edit* mode on the Form Folder, notice the *Overrides* tab on the right-hand side of the page properties tabs. Form submission behaviors can be customized in this tab."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:72
msgid "Read the on-screen help to give you an idea what sort of customizations are possible here. Depending on what you need to do, you may need to learn how to write some basic TALES or Python code. Don't be afraid though!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:78
msgid "Overview of Field Types"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:82
msgid "Learn about the commonly used field types in PloneFormGen."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:84
msgid "By now you've seen how to create a new form. The next step is to learn how to add new fields to the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:86
msgid "There are a lot of different types of fields that one can employ. You've probably seen many of those types of fields around on the Internet like a text box, a list you can choose from, a checkbox, radio buttons, and so on."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:88
msgid "Some of the field types that are included with PloneFormGen will not be discussed here as they are used more for advanced applications than for basic web forms. The field types discussed here should be all you need to create useful forms in Plone."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:91
msgid "Common field types"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:93
msgid "Navigate to your Form Folder and push the Add Item button. You should see a long drop-down menu appear. There's a lot of choices, but we've chosen the four most common to focus on for this tutorial."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:96
msgid "String Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:96
msgid "This is probably the most commonly used field. It's a simple, one-line text box for gathering info like name, address, e-mail, phone number and so on."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:99
#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:184
msgid "Text Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:99
msgid "A large text box for gathering things like comments or other long-form text responses."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:102
msgid "Selection Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:102
msgid "This field type is to gather one choice from a list of selections. The list can be checkboxes, radio buttons, or a text list."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:106
msgid "Multi-Select Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:105
msgid "Use this field type if you want to let your site visitor select multiple items from a list."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:108
msgid "You'll notice that there is a special icon for each field type. It's a good idea to get familiar with how each one looks so you'll be able to recognize the different field types at a glance."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:110
msgid "In the next section, you'll see how to add and configure a string field; the most common type of form field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:113
msgid "Adding a String Field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:115
msgid "Steps to adding a single text line field called a String."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:117
msgid "Navigate to your Form Folder and click Add Item. Select String Field from the drop-down menu."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:120
msgid "The string field creates a simple one-line text box. Some common uses for this field type are:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:122
msgid "First Name"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:123
msgid "Last Name"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:124
msgid "Email"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:125
msgid "Street Address"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:126
msgid "Lots more!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:129
msgid "Basic field info"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:131
msgid "Many field types have the same information on their edit screen. Here's an explanation of each of these:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:133
msgid "Field label"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:134
msgid "The title of the field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:135
msgid "Field help"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:136
msgid "Some text you can provide to the form submitter to help them figure out what you're asking for."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:137
msgid "Required"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:138
msgid "Is this a required field?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:139
msgid "Hidden"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:140
msgid "Is this a hidden field? This is useful for passing data back to yourself."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:142
msgid "Default"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:142
msgid "You can supply a defult value that the form submitter can change if they wish."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:144
msgid "Other types of information can be defined for other field types, and we will cover those as they come up. Since we're talking about the string field, let's take a moment to talk about validation."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:147
msgid "Validators"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:149
msgid "Validation is a feature common to many web forms. A validator checks that the input being provided conforms to a particular format. For example the \"email address\" validator simply checks that the input contains an @ sign (i.e. contact@groundwire.org). There are a set of standard validators available for string fields such as: Valid US phone number and Valid zip code."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:151
msgid "In practice validators can be helpful, but in some cases they may be too restrictive. If your site visitors are from outside the US, they mey become frustrated with trying to get past US-centric form validators!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:154
msgid "PloneFormGen editing environment"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:156
msgid "Note that PloneFormGen has both an *Edit* tab and a *QuickEdit* tab on the taskbar. The *Edit* mode mainly allows you to edit major settings for the entire form. The *QuickEdit* mode allows you to interactively edit the form. It's much a much easier way to add, edit, delete and reorder fields."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:158
msgid "In *QuickEdit* mode, you may add fields by dragging them from the toolkit at the right side of the page and dropping it into the target position in the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:160
msgid "If you want to see the form the way that your site visitors would, you can click on View in the taskbar. Likewise you can get to the editing environment from the normal view, by clicking the *QuickEdit* tab in the taskbar."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:162
msgid "Note that you cannot complete or submit the form when working in the editing environment. You will need to return to the normal form view first."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:168
msgid "Changing the Order of the Fields"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:172
msgid "How to rearrange fields in your form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:174
msgid "By now you're probably wondering how to change the order that fields appear on your form. By default, when you create a new field, it will appear at the bottom of your form. Often, this isn't the result you wanted to see."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:176
msgid "Navigate to your Form Folder and click on the *QuickEdit* tab on the taskbar to enter the form editing environment."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:178
msgid "Notice that the column on the far left called Order. You can move the position of each field by clicking and dragging each field around if you hover your mouse pointer in the Order column. Continue to rearrange fields until you have the layout you want."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:180
msgid "To see the results, you need to click on the View tab to see your form the way your site visitors will."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:188
msgid "How to add a text box for collecting comments or other text."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:190
msgid "A *Text field* is like a string field except that it's a large box instead of a single line. You can change the size of the field by adjusting theRows and Max Lengthparameters."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:192
msgid "Rows controls the vertical height of the text box. Max Length controls the number of characters the site visitor can input at a time. If you want to limit a Comments text box to short comments, you might choose 500 characters as the limit."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:194
msgid "The *Default* field can be used if you want to suggest some content to the site visitor or wish to show an example of the sort of information you want from them."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:196
msgid "You can also *Reject Text with Links* to discourage people from adding links to your text area field. One reason why you might choose to do this would be if you're asking someone to enter some information and you don't want them to simply link to a blog entry or other online content."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:199
msgid "Selection and Multi Select"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:203
msgid "How to create menus and checkboxes for selecting items from a list within your form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:205
msgid "In addition to text boxes and the string field, *selection* and *multi-select* are commonly used field types. They allow site visitors to choose a selection from a list, drop-down menu, radio buttons or checkboxes."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:208
msgid "Selection field"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:210
msgid "As before, you must be in your Form Folder to add additional fields. Choose *Selection Field* from the list in the Add New drop-down menu or the QuickEdit toolkit."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:212
msgid "In addition to the regulars like *Field Label* and *Field Help*, there is *Options* and *Presentation Widget* to consider."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:215
msgid "Options"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:217
msgid "Options is for establishing what the options in the field are going to be. Each option should be separated with a line break."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:220
msgid "Presentation widget"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:222
msgid "The *Presentation Widget* is the kind of graphic used for gathering the input: you can choose either Radio Button or Selection List (a drop-down menu). The option Flexible simply means that you leave it up to PloneFormGen to decide which widget is most appropriate. Basically, if you have more than three choices it will use the selection list. Less than three will appear as radio buttons."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:225
msgid "Value|label"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:227
msgid "Entering Options can be done in one of two ways. Either \"one line per option\" or the \"Value|Label format\". One line per option is described above, but what about *Value|Label*?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:229
msgid "Let's say you want to present some choices, but the actual value recorded by the form is different than what the form submitter sees on the screen. For example, let's say that you want to ask a site visitor what county they live in, but in your program work you classify counties into regions like \"Northwest\" and \"Southeast\". Instead of asking the visitor to identify which region they live in (which some might get wrong or misunderstand) you could present them a list of counties."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:231
msgid "In the above example you would format Options like this::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:240
msgid "In this example, if a visitor selects \"Jefferson\" as their county, the form would record the entry as \"Northwest\"."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:243
msgid "Multi-select"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:245
msgid "Multi-select is very similar to a Selection Field except that you have an additional widget (the checkbox) and your site visitors can choose many options from one list."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:247
msgid "If you plan to use the Selection List widget for a multi-select field, it is helpful to include a note about the Control key in Field Help. In order to actually choose more than one option in the list, you must hold down the control key (CRTL) on your keyboard and then click to select/de-select options. Because of this, it is most often the best choice to use the Checkbox widget instead of Selection List for a multi-select field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:250
msgid "The Thank You Page"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:254
msgid "How to customize the page a site visitor sees after submitted the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:256
msgid "After a site visitor has filled out your form and clicks submit, they will see a page thanking them for their input. Look in your Form Folder and you should already see a Thank You page in the contents."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:258
msgid "It doesn't matter where the Thank You page appears in your Form Folder contents. It will always work the same, no matter its folder position."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:260
msgid "By default, the thank you page only lists a summary of what the site visitor put into the form. Here's an example of what that looks like, to the right."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:262
msgid "Note: You will only see this result if you fill out the form and submit it. Otherwise, if you try to navigate or link to the thank you page directly, you get a message that says something like \"no input was received\"."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:265
msgid "Add content to the thank you page"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:267
msgid "The above example is decent, but there will be times that you may want to say something more, or even provide a few links for your site visitor to follow. Edit the Thank You page in your list of Form Folder contents. You should now see the familiar Title and Description fields, but you'll also see:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:269
msgid "Thanks Prologue"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:270
msgid "Thanks Epilogue"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:271
msgid "No Submit Message"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:273
msgid "If you've chosen to display any field results the Prologue content will appear before those results and the Epilogue content will appear after. If you aren't going to display field results, just use the Prologue."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:275
msgid "Should you wish to change the No Submit Message (remember, if you just hit submit on your form without filling out any fields, you'll see this message) you can do so here. You have the full power of Plone's text editor so feel free to include links and formatted text here."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:278
msgid "Fields"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:280
msgid "thanks-fields.gif"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:282
msgid "When editing the Thank You page, notice the Fields tabnext to Default. Here's where you can control which field results to display or which ones to take out. Simply uncheck Show All Fields if you don't want to display any results on the Thank You Page."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:286
msgid "The Mailer Adapter"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:290
msgid "Learn to configure the adapter which sends an email after the form is submitted."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:295
msgid "Adapters control what happens to the form data that your site visitors submit the form. The Mailer Adapter will send form data to an email address or addresses of your choosing. The Save Data Adapter will save the results in your Form Folder so that you can export any time you wish. You can even use adapters concurrently to get the functionality of both."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:298
msgid "Configuring the mailer adapter"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:300
msgid "The *Mailer Adapter* is probably the more complex of the two adapters covered in this tutorial. As such, we won't go through and explain all the options present in the Mailer Adapter. However, we will cover the most important options available."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:302
msgid "Go ahead and edit the Mailer Adapter in the form editing environment. The first screen you see look like this:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:304
msgid "From here you can do three things:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:306
msgid "Change the Title of your Mailer Adapter (really no reason to unless you have more than one)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:307
msgid "Choose a recipient name"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:308
msgid "Choose a recipient email address"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:311
msgid "Addressing"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:313
msgid "Now notice the tabs [default] [addressing] and so on. Click on [addressing]."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:315
msgid "The *Addressing* screen allows you to make selections about other recipients any dynamically populate the *From* and *Reply-to* fields directly from form data."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:318
msgid "Message"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:320
msgid "The Message tab allows you to configure the:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:322
msgid "Subject Line"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:323
msgid "Email body content"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:324
msgid "Form field data that appears in the email message"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:327
msgid "Template, encryption, & overrides"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:329
msgid "These options are beyond the scope of this tutorial as they require a discussion of HTML, TALES and Python programming languages as well as an understanding of mail server configuration."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:332
msgid "The Save Data Adapter"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:336
msgid "Collect and save answers from each from submission with the Save Data Adapter."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:338
msgid "Unlike the Mailer Adapter, the *Save Data Adapter* isn't automatically created when you build a new Form Folder. As such, you must add it yourself by clicking Add New (when you're in your Form Folder) and selecting the *Save Data Adapter* from the drop-down menu. Or, drag and drop it from the toolbox in QuickEdit mode."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:340
msgid "The first thing you'll see is a screen like the one to the right."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:343
msgid "Configure the adapter"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:345
msgid "Enter in a Title that sounds good to you (*My Saved Form Data*, for example). Your site visitors won't see this title at all, so anything will do."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:347
msgid "Next, you can select some *Extra Data* to store if you wish. Most of these choices are for fairly esoteric things, but Posting Date/Time could be helpful if you want to know when someone filled out your form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:349
msgid "*Download Format* depends on what your preferences are, but *Comma-Separated Values* is probably the most common. It really depends on if you are going to plug the info into a database, and what type of file is most appropriate for that. If the info is for human eyes only, then it doesn't really matter what you pick here. Europeans: you may choose to use a colon rather than a comma for CSV on the PloneFormGen config panel in site setup."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:351
msgid "Now click on *Save* to finish. You do not need to put anything into the Saved Form Input box. If your Save Data Adapter had any data in it, it would appear in that box."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:353
msgid "That's all there is to it. Sit back and wait for the data to come pouring in!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:356
msgid "Retrieving your data"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:358
msgid "Once your form has been filled out a few times by site visitors, you can start retrieving the form data. You need to navigate to your Form Folder and click on the Contentstab to get a view of all contents."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:360
msgid "Now click on your *Save Data Adapter*. You should then see a screen like this one at the right."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:362
msgid "You can download the form data as many times as you want. The data will always be there as long as you don't delete the *Save Data Adapter*. If you click *Clear Saved Input* all data will be erased as well."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:365
msgid "Safety Net"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:367
msgid "A common way of saving important data is to use two *save data* adapters in your form. Use one to occasionally harvest new data and clear it. Use the other to save all your history."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/getting_started.rst:372
msgid "This document was originally written by Sam Knox for Groundwire. Thanks to both Sam and Groundwire for passing it on to the Plone Foundation."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:3
msgid "Using GnuPG encryption"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:7
msgid "The Gnu Privacy Guard may be used to encrypt emails sent by PloneFormGen."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:11
msgid "Encryption is serious business, and this how-to does not teach you about it or about the Gnu Privacy Guard. You should develop expertise with both of these before attempting to enable PFG encryption."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:13
msgid "Using GPG encryption with PloneFormGen requires:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:15
msgid "1) That gpg be installed on your system and available on the search path or in a common location (e.g., /usr/bin);"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:18
msgid "2) That gpg, when executed as a subprocess of Zope/Plone, be able to find a public keyring;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:21
msgid "3) That gpg, when executed as a subprocess of Zope/Plone, have the rights to read the public keyring;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:24
msgid "4) That you, as administrator, understand how gpg works, and be able to maintain the public keyring."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:27
msgid "PloneFormGen tries to find the gpg binary when it's installed, when the product code is refreshed, and when you restart Zope. If it finds it you will see an \"encryption\" field set in the mailer adapter form. If you don't see the \"encryption\" fieldset, it means PloneFormGen didn't find a gpg binary. Fix this by adding the path to the gpg binary to the PATH environment variable when you start Zope."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:34
msgid "gpg will typically look for a public keyring in the current user's home directory, .gnupg subdirectory. If it's not finding it, consider the possibility that the user id you're using to maintain your keys isn't the same one that you're using to run Zope. You may need to use the GNUPGHOME environment variable to point to your .gnupg directory. Make sure your Zope process can open the directory and read the file!"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:41
msgid "Windows"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/gpg.rst:43
msgid "gpg can work in a Windows environment, but you'll need to have a command-line gpg. http://www.cygwin.com/ is a good, free source."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:3
msgid "Creating forms without programming: PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:7
msgid "PloneFormGen allows you to build and maintain convenience forms through Plone edit interface."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:12
msgid "*PloneFormGen* is a Plone add-on Product that provides a generic Plone form generator using fields, widgets and validators from Archetypes. Use it to build simple, one-of-a-kind, web forms that save or mail form input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:14
msgid "To build a web form, create a form folder, then add form fields as contents. Individual fields can display and validate themselves for testing purposes. The form folder creates a form from all the contained field content objects."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:16
msgid "Final disposition of form input is handled via plug-in action products. Action adapters included with this release include a mailer, a save-data adapter that saves input in tab-separated format for later download, and a custom-script adapter that makes it possible to script simple actions without recourse to the Zope Management Interface."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:18
msgid "To make it easy to get started, newly created form folders are pre-populated to act as a simple e-mail response form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:20
msgid "`PloneFormGen product page <https://plone.org/products/ploneformgen>`_"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:23
msgid "Getting started with PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:31
msgid "PloneFormGen topics"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/index.rst:49
msgid "Advanced topics"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/installation.rst:3
msgid "Installing PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/installation.rst:7
msgid "PloneFormGen is a Plone add-on product, and is not included with Plone. Fortunately, it's easy to install."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/installation.rst:9
msgid "PFG installs just like most other Plone add ons. Edit the buildout.cfg file at the top of your Plone instance and look for the ``eggs =`` section that specified Python Packages that you with to include. Add PloneFormGen:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/installation.rst:18
msgid "Run bin/buildout and restart your Plone instance. Dependencies will be loaded automatically."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/installation.rst:20
msgid "After restarting Plone, visit your site-setup page and use the \"add on\" configuration page to activate PloneFormGen."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:3
msgid "Adding a JavaScript event handler to a form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:7
msgid "Need to make your PFG forms more dynamic? It's easy to add JavaScript."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:9
msgid "There are two basic steps to injecting JavaScript into a PFG form:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:11
msgid "Use the Zope Management Interface to create a text file (object type: file; mimetype: text/plain) either inside the form folder or in a skin folder;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:13
msgid "Use the form folder's edit / overrides pane, header injection field to tell PFG to inject it into the form."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:16
msgid "Injection"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:18
msgid "Let's look at the second step first. Let's say that your JavaScript file is named form_js. Then just specify::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:22
msgid "in the header injections override field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:25
msgid "The JavaScript"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:27
msgid "There are a couple of considerations here:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:29
msgid "Since this is a header injection, you'll need to supply the ``SCRIPT`` tags;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:31
msgid "You'll nearly certainly want to use jQuery to attach the event handler, since jQuery is part of Plone."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:44
msgid "This code fragment shows off both, and attaches an alert to every input in the ``mqy-questions`` field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:46
msgid "Note the use of the common jQuery idiom:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:54
msgid "This accomplishes a couple of things: 1) it sets the code up to run once the page is loaded; 2) it aliases \"jQuery\" to \"$\" so that we may use common jQuery shorthand."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:57
msgid "An alternative injection"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:59
msgid "If you want to use a separate JavaScript file that is actual JS (no ``script`` tags) and will be shared among forms, just use the header injection override like this::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:63
msgid "assuming your script is named ``form_scripts.js``. You may make it a little more sophisticated if you need an absolute URL::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/javascript.rst:67
msgid "using TALES string interpolation."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:3
msgid "Creating a Multi-Page Form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:7
msgid "You can create a multi-page form as a chain of form folders."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:9
msgid "Creating a multi-page form is probably much simpler than you might suppose. You may do it by just creating a sequence of form folders that each link to the next. The basic procedure is:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:12
msgid "Create your sequence of form folders, typically all in the same normal Plone folder;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:13
msgid "On all but the last form folder, turn off all action adapters and set the Custom Success Action override to \"traverse_to:string:id-of-next-form-folder\";"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:14
msgid "On all but the last form folder, set the Submit Button Label to something like \"Next\" and turn off the cancel button."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:15
msgid "On all but the first form folder, set the Exclude From Navigation flag in the properties tab;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:16
msgid "In each form folder, create a set of hidden form fields matching all the fields in all the previous forms;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:17
msgid "In the last form, turn on your real action adapter(s)."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:19
msgid "As your user moves from form page to page, input will be automatically saved in the hidden fields of subsequent pages."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:23
msgid "A Note on Hidden Fields: The hidden flag is not available for all form field types, but you don't need it. String, Text and Lines fields are adequate to carry all the basic data. Use a hidden Lines field to hold multiple selection field input, string or text for the rest."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:25
msgid "An added bonus"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:27
msgid "If you want to create a sequence of forms, where the answers on form_A could lead to a form_B or form_C, you can use a traverse_to override."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:29
msgid "Create a selection field in form_A, which could be called 'formnext';"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:30
msgid "As values in the selection field, put the paths to the next forms in the sequence;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:31
msgid "Then, in the form overrides -> custom success action use"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:33
msgid "traverse_to:request/form/formnext"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/multipage.rst:36
msgid "use traverse_to as opposed to a redirect_to as this will preserve the form object in the request."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:3
msgid "Overriding field defaults dynamically"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:7
msgid "PloneFormGen allows you to supply dynamic field defaults by specifying a TALES expression in the Default Expression field of the overrides fieldset (sub-form). This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:9
msgid "Creating a dynamic field default means to have a form field's initial value change with context. We might, for example, wish to use a member's e-mail address, which would vary with the user. Or, we might be looking up some data via a catalog or RDBMS query, and wish to supply that to the user for correction."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:18
msgid "A quick example"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:20
msgid "Let's say you wish to put the member's id in a string field default. You may do that with the TALES expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:24
msgid "This is a path expression. \"id\" is found in the \"member\" object and returned."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:26
msgid "There's a gotcha here. What if the form is viewed by an anonymous visitor? They'll receive an error message. We can avoid that with the expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:30
msgid "The vertical bar (|) marks alternate expression that is used if the left-hand expression is empty or can't be evaluated. Here we're saying to show nothing if member/id can't be evaluated. Using Python"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:33
msgid "You may also use Python expressions::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:37
msgid "would supply a value of 8. This is trivial, but what about::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:41
msgid "This would supply the current date/time plus seven days."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:74
msgid "When you compose your TALES expression, keep in mind that it will need to return different types of data for different types of fields. For simple field defaults, return a string value; for the lines field, return a list or tuple."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:77
msgid "Calling a Python script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:79
msgid "You'll be frustrated fast if you try to do anything smart in a single TALES expression. If you need to do something more complicated, add a Python Script to your form folder and call it via TALES. For example, if you added a script with the id getEmail, you could call it with the expression::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:83
msgid "Make sure your script returns the value you wish to use as a field default, in the appropriate format. Setting Many Defaults With One Script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:86
msgid "If you need to dynamically set several fields, you may do it with one script. Call the script by specifying it in the Form Setup Script field of the form folder's overrides fieldset."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:88
msgid "Set the form fields by putting them in the request/form dictionary. Make sure you don't overwrite anything that's already in the dictionary, as that is probably previously submitted input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:90
msgid "For example, we could create a Python Script (using the ZMI) in the form folder:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:98
msgid "If the script id was setTopicDefault, we'd call it by putting::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/override_defaults.rst:102
msgid "in the `Form Setup Script` field of the form folder's overrides fieldset."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:3
msgid "What's in a Request"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:7
msgid "If you're trying to use PloneFormGen overrides, you're going to need to use the request object. Here's a quick trick for exploring it."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:9
msgid "As a page is assembled by Zope and Plone following a browser request, information about that request is bundled into a non-persistent, pseudo-global request object. This object is available in the scripts, templates and TALES expressions you may use in creating PloneFormGen overrides. It will contain the form input submitted by the user."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:11
msgid "To effectively write more complex overrides, you're going to need to know how to get information out of the request object."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:15
msgid "The Request class itself is well-documented in the Zope help system (API section) and in the source at Products.OFSP-2.13.2-py2.X/Products/OFSP/help/Request.py."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:17
msgid "Here's a quick recipe that will help you examine the form input contained in the request."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:19
msgid "Jump into the ZMI and navigate to your PFG Form Folder. Inside it, create a Page Template named showrequest. Now, just before </body>, add::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:23
msgid "Note: when the request object is called, it renders a readable, HTML version of the data. We use \"structure\" to prevent escaping the HTML."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:25
msgid "Give your template a title and save it away."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:27
msgid "Return to Plone and your form folder. Edit it, and on the form's [overrides] pane, set a Custom Success Action of::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:31
msgid "Note that this will override any thanks page you've specified. Just clear it when you're done developing."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/request.rst:33
msgid "Now, just fill out your form, and submit it. You should see the contents of the request object. Take a particular look at the form section. That's a dictionary available as request.form when you're composing an override."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:3
msgid "Restyle a form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:7
msgid "How to inject CSS into a form page to turn a label green ... or pretty much anything else."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:9
msgid "The general answer to \"how do I restyle a form\" questions is: use CSS."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:11
msgid "The underlying Archetypes form generator surrounds every form element with a <div> with a distinct ID. For example, a sample form with a textarea contents field has the generated XHTML:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:27
msgid "That's more than enough ID and Class selectors to do pretty much anything in the way of visual formatting."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:29
msgid "So, how do we get the CSS into the form's page. You could add it to the site's css, but there's a much easier way. Using the ZMI, create an object of type File inside your form folder. Set its Content Type to \"text/plain\" and give it the ID \"newstyle\"."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:31
msgid "Let's turn the label for the comments field green. Just fill in the big text field on your file with:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:41
msgid "Now, just save it, return to the Plone UI and edit your form folder. Specify \"here/newstyle\" for the Header Injection field of the ``overrides`` pane. Now, enjoy your green label."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:44
msgid "Putting checkboxes in a row"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:46
msgid "Now, for a more useful example. It's a common requirement to want to put a set of checkbox fields on a single line."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:48
msgid "The easiest way to set this up is to create the list of checkboxes as a multi-selection field with \"checkboxes\" designated for display. That's going to generate markup that will look something like this:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:71
msgid "Note that each checkbox/label pair is in a ``DIV`` with the class \"ArchetypesMultiSelectionValue\". The basic CSS couldn't be simpler:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:82
msgid "Of course, you'll need to do some more styling. First of all, you'll need to set a ``clear: left`` on the following control. And, you'll need to do some padding."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:85
msgid "Putting string fields in a row"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:87
msgid "Making string fields display horizontally is a little different than the solution for checkboxes.  There is no div wrapping the string fields like there is with check boxes.  To get around this, add a fieldset and put the fields in the fieldset.  This also lets you isolate the horizontal fields from other vertical fields.  Here, two fields are required, one is not.  The markup will look similar to this:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:114
msgid "Here is the CSS:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:142
msgid "An alternative way to inject CSS"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:144
msgid "Let's say you've got a lot of CSS. You may want to use an external style sheet file rather than inject the whole bundle into the header with every form display."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:146
msgid "Let's say the CSS resource is named ``form_styles.css``. Then, just put the following in your overrides / header injection field::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:151
msgid "We can get a little fancier to generate absolute URLs for the style file::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:156
msgid "using the string interpolation feature of TALES."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/restyle.rst:161
msgid "Need to do something more sophisticated? You can use a Python script to generate dynamic CSS or JavaScript."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:3
msgid "Using a selection field to pick mail destination"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:7
msgid "You may allow form users to use a selection field to choose a destination address for their form input."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:9
msgid "I'm trying to use a PloneFormGen form as a support center for my project and I would like to have the mail sent to different email addresses based on a choice from a selection field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:11
msgid "How can I do it?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:14
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:183
msgid "The form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:16
msgid "First, create a selection field in your form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:18
msgid "In the Options field, specify your set of possible destination addresses in a \"value|label\" format where the e-mail address is the value and its readable name the label. For example::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:23
msgid "Then, pick the address (the actual e-mail address value,  not the label) you wish selected by default. Put it in the Default field. Make sure the Required checkbox is selected."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:25
msgid "Save the form field."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:28
msgid "Configuring the mailer"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:30
msgid "Now, edit the mail adapter for your form. (Navigate to the form folder, click on contents, find your mail adapter and follow the link; select the edit tab.)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/select_mail.rst:32
msgid "Choose the `[addressing]` sub-form and find the Extract Recipient From field. You should see a None choice and a list of all of the selection fields in your form. Select the field you just created and save your changes."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:3
msgid "Simple SQL CRUD with PloneFormGen"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:7
msgid "A step-by-step lesson in using PloneFormGen to read, insert and update rows in a single SQL table."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:14
msgid "One of the goals of PloneFormGen is that it should be useful for simple update operations on an external database."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:16
msgid "This tutorial covers the use of PloneFormGen to update and insert rows in a single-table SQL database."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:18
msgid "The simple application we'll develop here would need quite a bit of polishing before you'd wish to expose it to the public, but it will demonstrate the basic techniques."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:20
msgid "Skills required to understand this tutorial include:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:22
msgid "The ability to add an SQL database connection and Z SQL Methods via the Zope Management Interface and to understand what they do. If you've never read the Relational Database Connectivity chapter of the Zope Book, take some time now to do it; it's fundamental."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:24
msgid "Simple Python scripting via the ZMI. Read the python-based scripts portions of the Advanced Zope Scripting chapter of the Zope Book if you're new to this vital Zope/Plone development skill."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:26
msgid "Our basic steps will be to:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:28
msgid "Add a database and table to our SQL database and create a matching form in PloneFormGen;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:30
msgid "Add a Z SQL Method to insert rows into the database and show how it can be used in PFG;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:32
msgid "Add a Z SQL Method to read a row, write a Python script wrapper and use it to fill out the fields of our form;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:34
msgid "Add a Z SQL Method to update a row, write a Python wrapper for it and the insert method and use it as a form action;"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:36
msgid "Consider the security implications of the fact that the SQL access methods we just created are not part of the Plone workflow."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:38
msgid "By the way, we'll be skipping the \"D\" in CRUD. Deletion is up to you. :)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:42
msgid "This tutorial uses *Z SQL Methods* because they're easy to teach quickly. If you're doing any significant database work with any Python application, `SQLAlchemy <http://www.sqlalchemy.org>`_ is a much more scalable way to use a relational database from Plone."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:45
msgid "Database table & form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:47
msgid "In this step, we create a simple database table and a matching form. The database"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:50
msgid "Hope you're not feeling too ambitious at the moment, because this is going to be a very simple demonstration table. It's going to have just three columns:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:53
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:81
msgid "uid"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:53
msgid "A unique ID that's the primary key for the table. We'll make it auto-increment so that our SQL server (MySQL in this case) will do the work of keeping it unique."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:56
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:84
msgid "string1"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:56
msgid "A simple string."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:60
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:87
msgid "string2"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:59
msgid "Another simple string."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:62
msgid "(I told you this was simple!)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:64
msgid "Create a test database and then the table. In MySQL, the CREATE code to set up the table is:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:75
msgid "Now, set up an SQL user with privileges adequate to select, insert and update the table. Use that user identity to set up an SQL database connection object via the ZMI. (If you're using MySQL, this would be a Z MySQL Database Connection.) The connection must be in a place where it will be visible to the form you'll be creating. The form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:78
msgid "Now, create a PloneFormGen form with three fields:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:81
msgid "An string field with id uid, marked hidden, with a default value of \"-1\". Later in the tutorial, we'll use the \"-1\" as a marker value to indicate a new record."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:84
msgid "A string field with id string1."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:87
msgid "A string field with id string2."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:89
msgid "Note that the form field ids must exactly match our column ids. You can script your way around this requirement, but it's a lot easier this way."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:91
msgid "While you're at it, turn off or delete the mailer action adapter. It's harmless, but it would be a distraction."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:93
msgid "That's it. We now have a form that matches our database table."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:96
msgid "Inserting rows"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:98
msgid "In this step, we create a method to insert a row, and show how to make simple use of it."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:100
msgid "Now, inside the Zope Management Interface, in your form folder, create a Z SQL Method with the id *testCreateRow*."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:102
msgid "Set the parameters:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:104
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:131
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:208
msgid "Connection ID"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:105
msgid "This should be the database connection you set up to allow access to your test database."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:107
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:134
#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:211
msgid "Arguments"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:107
msgid "On separate lines, specify \"string1\" and \"string2\". (Leave off the quotes.)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:109
msgid "Then, in the big text area, specify the code:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:119
msgid "Note: always use <dtml-sqlvar ...> to insert your variables. It protects you against SQL-injection attacks by SQL quoting the values."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:121
msgid "Now for a little magic: Z SQL Methods can pick up their arguments from REQUEST.form, which is exactly where Zope is putting your form variables when you submit a form. That means that you can just go to the [overrides] pane of your Form Folder and set ``here/testCreateRow`` as your After Validation Script."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:123
msgid "Your form will now store its input into your SQL table! Add a few rows to check it out. Reading a Row, Filling in the Fields"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:126
msgid "If we want to update records, we're going to have to get rows from our SQL table and use the columns to populate our form fields. The SQL"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:129
msgid "Now, use the ZMI to create, inside your form folder, a Z SQL Method named testReadRow. Set up the following parameters:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:132
msgid "Choose your test database adapter."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:134
msgid "Just \"uid\""
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:136
msgid "Then, add the SQL Code:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:143
msgid "The <dtml-sqltest ...> operator is a safe way to use user input for an SQL \"where\" test. The default test is \"=\". The Script"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:146
msgid "Let's wrap this method in a simple Python script that will selectively use it. Create a Python Script with the id formSetup and the Python:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:160
msgid "Let's deconstruct this code."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:162
msgid "The if test:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:168
msgid "will make sure that this code does nothing if the form has already been submitted (we don't want to overwrite values the user just input). It also won't do anything if we don't have a \"uid\" variable in the form dictionary. (form.submitted is a hidden input that's part of every PFG form.)"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:170
msgid "If we have a uid variable and we won't be overwriting user input, then we call our SQL read method:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:176
msgid "This will return the results of our SQL query in the form of a list of dictionaries. The dictionary entries will be in the form columnid:value."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:178
msgid "Note that the uid value is being passed via the request variable, and doesn't need to be specified."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:180
msgid "The rest of the code checks to make sure that we got one result, and throws all of its key:value pairs into the form dictionary -- just where our form will expect them."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:185
msgid "Now, just go to the [override] pane of your form folder, and specify ``here/formSetup`` for your Form Setup Script."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:188
msgid "Calling The Form"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:190
msgid "Hopefully, you've got a few rows in your table. Now, try calling your form with the URL::"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:194
msgid "Everything up to the question mark (the query string marker) should be the URL of your form folder. The \"?uid=1\" specifies that we want to use the data from the row where the uid is \"1\"."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:196
msgid "How would you actually get your users to such a URL? Typically, you'd have some sort of drill-down search that offered them a list of links constructed in this fashion."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:198
msgid "Creating a drill-down template is left as an exercise for the reader."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:201
msgid "Updating or inserting as necessary"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:203
msgid "In this step, we'll create an update SQL method and show how to selectively update or insert data."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:205
msgid "Using the ZMI, create a Z SQL Method inside your form folder with the id testUpdateRow. For its parameters, set:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:209
msgid "Choose your test database connection."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:211
msgid "Add \"uid\", \"string1\" and \"string2\" on separate lines, without quotes."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:213
msgid "Then, specify the SQL code:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:223
msgid "Notice the use <dtml-sqltest ...> for the SQL set id=value lines. This is just a hack that uses sqltest where we could have instead written lines like \"string1=<dtml-sqlvar string1 type=string>\"."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:225
msgid "Now, we've got to solve a simple problem. How do we update our table under some circumstances, and insert new values under others?"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:227
msgid "Remember how we set \"-1\" as the default value of our hidden \"uid\" form field? If we've read a record, uid will have changed to match a real row. If it's \"-1\", that means that we started with a clean form rather than values read from a table row."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:229
msgid "Let's use that knowledge in a simple switchboard script with the id doUpdateInsert:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:242
msgid "Now, go to the [overrides] pane of your form folder and set ``here/doUpdateInsert`` as the *AfterValidationScript*."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:244
msgid "Believe it or not ... you're done."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:246
msgid "Time to go back and repeat the process with your own table. Don't forget to add lots of sanity-checking code along the way."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:249
msgid "A note on security"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:251
msgid "It takes extra steps to secure a database connection and SQL methods."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:253
msgid "If this is the first time you've worked with a Zope database connection, there's an important security point you may not have considered:"
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:257
msgid "Zope Database Connections and Z SQL Methods are not part of the Plone workflow."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:259
msgid "This means that you may not depend on the Plone content workflow to provide security for these connections and methods. You must use the Zope security mechanisms directly to control access."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:261
msgid "This is also true of Python scripts and other Zope-level objects you might create via the ZMI. But Zope provides a safety net of security for most of those. There is no such automatic safety net for external RDBMS access methods."
msgstr ""

#: ../working-with-content/managing-content/ploneformgen/sql_crud.rst:263
msgid "The easiest way to do this is to use the ZMI to visit the top-most folder of your form and use the Security tab to customize security. Look in particular for the Use Database Methods permission, and make sure it is not extended to any user role that should not have a right to read or update your external database."
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:2
msgid "Presentation Mode"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:4
msgid "Plone comes with the ability to create very simple slideshow presentations."
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:7
msgid "Presentation Mode is a special feature of the Page content type. You can enable Presentation Mode by editing the page, then going to the **Settings** tab. Notice the Presentation Mode checkbox available there. Once checked, a link will appear in the view of the page for a user to view the page in Presentation Mode."
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:14
msgid "How to Create Slides"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:16
msgid "All the content for a presentation lives on a single page. You do not need to create a page for each slide. A slide is created when you use the Heading (h1) class on the page - they effectively indicate to Plone where you want your slides to be."
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:21
msgid "You can have as many slides as you want in your presentation. Just add more Heading (h1) tags to your page and the content between that h1 tag and the next h1 tag becomes the content of your slide."
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:26
msgid "How to Format a Slide"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:28
msgid "It is very important to note that the **Normal Paragraph style will not render any content in the slide**. Slides are meant to display summary information, not chunks of paragraph text. As such, you must class all content in each slide with a style other than Normal Paragraph. Examples of those styles include:"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:34
msgid "Heading (h1)"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:35
msgid "Subheading (h3)"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:36
msgid "Definition list"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:37
msgid "Bulleted list"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:38
msgid "Numbered list"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:39
msgid "Literal"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:40
msgid "Pull-quote"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:41
msgid "Call out"
msgstr ""

#: ../working-with-content/managing-content/presentation-mode.rst:42
msgid "Highlight"
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:4
msgid "Next/Previous Navigation"
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:6
msgid "Automatic previous-next links for content items in a folder can be enabled under the Settings tab for a folder."
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:9
msgid "The *Settings* tab is found by clicking the *Edit* tab for the folder. There is a toggle for enabling previous-next links for items contained in the folder:"
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:17
msgid "Once enabled, as content items are added to the folder, previous and next links will automatically appear as needed:"
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:24
msgid "Three pages have been created within the Cloudywings folder, and \"Page Two\" (which has no text, for this example) has been clicked. At the bottom of \"Page Two\" are links for \"Previous: Page One\" and \"Next: Page Three.\""
msgstr ""

#: ../working-with-content/managing-content/previous-next-links.rst:29
msgid "This is a *really* useful feature!"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:2
msgid "Reordering Items"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:4
msgid "The contents tab contains functionality for quick and precise reordering of items in a folder."
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:7
msgid "Consider the following folder, called \"Skippers,\" for holding information about this type of butterfly.Â Often, when we add content items, we don't initially get them in the order we want.Â The desired ordering is not always alphabetical, but in this example we can assume so. Below you see the Skipper butterfly subfolders are not in alphabetical order:"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:18
msgid "To move the top item named \"Spread-winged Skippers\" to the bottom of the list, one would click within the Order column on the left (containing the \"double-colon\" symbols) and drag the row to the desired position:"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:26
msgid "Example of Reordering"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:28
msgid "Dragging and dropping is done by holding the mouse button down as you move the item. The item that is being moved turns yellow as it is being moved:"
msgstr ""

#: ../working-with-content/managing-content/reordering-items.rst:36
msgid "When the mouse button is released, the item stays where it was dropped:"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:2
msgid "Versioning"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:4
msgid "An overview on how to view the version history of an item, compare versions, preview previous versions and revert to previous versions."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:8
msgid "Creating a new version"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:10
msgid "Plone includes a versioning feature. By default, the following content types have versioning enabled:"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:13
msgid "Pages"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:14
msgid "News Items"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:15
#: ../working-with-content/portlet-management/portlet-types.rst:51
msgid "Events"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:16
msgid "Links"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:18
msgid "Note that all other content types do track workflow history."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:20
msgid "Content items can be configured to have versioning enabled/disabled through the Site Setup â†’ Plone Configuration panel under \"Types\"."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:23
msgid "When editing an item, you may use the **change note** field at the bottom; the change note will be stored in the item's version history. If the change note is left blank, Plone includes a default note: \"Initial Revision\"."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:28
msgid "A new version is created every time the item is saved. Versioning keeps track of all kinds of edits: content, metadata, settings, etc."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:32
msgid "Viewing the version history"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:34
msgid "Once an item as been saved, you can use the **History** link found near the top of the page. Simply click it to show the History overlay:"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:41
msgid "history-viewlet.png"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:43
msgid "The most recent version is listed first. The History viewlet provides the following information:"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:46
msgid "The type of edit (content or workflow)"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:47
msgid "Which user made the edit"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:48
msgid "What date and time the edit occurred"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:51
msgid "Comparing versions"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:53
msgid "From the History viewlet you can compare any previous version with the current version or any other version with the version just before it."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:56
msgid "To compare any previous version with the one just before it, click the *Compare* link located between two adjacent versions in the History overlay."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:64
msgid "compare-button.png"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:66
msgid "By clicking this button, you'll see a screen like this one where you can see the differences between the two versions:"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:73
msgid "compare-versions.png"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:75
msgid "In this example, text in red is text which has been deleted and text in green is text which has been added to the newer version. You can toggle between **inline** or **as code** views of the differences between versions."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:84
msgid "Comparing Versions (HTML Source)"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:86
msgid "You may also compare any previous version to the *current* version by clicking the *Compare to current* link History overlay, found to the far right of each version listed."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:91
msgid "Viewing and reverting to previous versions"
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:93
msgid "**You can preview any previous version** of a document by clicking the *View* link to the right of any version listed."
msgstr ""

#: ../working-with-content/managing-content/versioning.rst:96
msgid "**To revert back to a previous version**, click on the *Revert to this revision* button to the right of any version listed."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:2
msgid "Working Copy"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:4
msgid "Working Copy lets you have two versions of your content in parallel."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:6
msgid "**When a Plone site is first created, there a number of additional features that can be enabled, including \"Working Copy\". If the Plone site you are using doesn't show the \"Check out\" option under the Actions menu, you will need to contact your site manager and request that \"Working Copy Support (Iterate)\" be installed.**"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:23
msgid "You might have been in a situation like this before: you have published a document, and you need to update it extensively, but you want the old version to exist on the web site until you have published the new one. You also want the new document to replace the current one, but you'd like to keep the history of the old one, just in case. Working copy makes all this possible."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:30
msgid "Essentially, you \"check out\" a version of the currently published document, which creates a \"working copy\" of the document. You then edit the working copy (for as long as you like) and when you're ready for the new version to go live, you \"check in\" your working copy, and it's live. Behind the scenes, Plone will replace the original document with the new one in the exact same location and web address â€” and archive the old version as part of the document's version history."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:39
msgid "Using \"Check out\""
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:41
msgid "First, navigate to the page you want check out. Then from the \"Actions\" drop-down menu, select \"Check out\":"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:93
msgid "An info message will appear indicating you're now working with a working copy:"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:117
msgid "Now you're free to edit your own local copy of a published document. During this time, the original document is \"locked\" -- that is, no one else can edit that published version while you have a working copy checked out. This will prevent other changes from being made to (and subsequently lost from) the published version while you edit your copy."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:143
msgid "Using \"Check in\""
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:145
msgid "When you are ready to have your edited copy replace the published one, simply choose \"Check-in\" from the \"Actions\" drop-down menu:"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:176
msgid "You will then be prompted to enter a Check-in message. Fill it out and click on \"Check in\":"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:202
msgid "Your updated document will now replace the published copy and become the new published copy."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:223
msgid "You will also notice that there is no longer a copy of the document in the user's personal folder."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:226
msgid "Note that it is not necessary (and in fact, it is not recommended) to use the \"State\" drop-down menu on a working copy. If you inadvertently do so, however, don't panic. Just go back to your working copy and use \"Check in\" from the \"Actions\" menu."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:232
msgid "Canceling a \"Check out\""
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:234
msgid "If for any reason it becomes necessary to cancel a check out and **you don't want to save any of your changes**, simply navigate to the working copy and select \"Cancel check-out\":"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:273
msgid "You will prompted to confirm the \"Cancel checkout\" or to \"Keep checkout\":"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:297
msgid "Note that if the user who has checked out a working copy is not available to check in or cancel a check out, users with the Manager role may navigate to the working copy and perform either the check in or cancel check out actions. That's because not all contributors have the *Check in* privilege. If that option is missing from your *Actions* menu:"
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:304
msgid "Use the *State* menu."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:305
msgid "Submit for publication."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:306
msgid "Ask a reviewer to **not** change the state."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:307
msgid "Ask the reviewer to perform the check in on your behalf instead."
msgstr ""

#: ../working-with-content/managing-content/working-copy.rst:309
msgid "The check in routine will handle the state."
msgstr ""

#: ../working-with-content/portlet-management/index.rst:2
msgid "Portlet Management"
msgstr ""

#: ../working-with-content/portlet-management/index.rst:4
msgid "An introduction to the use and management of portlets."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:2
msgid "Managing Portlets"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:4
msgid "How to add, remove, and rearrange portlets."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:6
msgid "To begin manipulating portlets, you must find the **Manage Portlets link**, usually located on the bottom of each side column. Under Manage Portlets, you can create new Portlets, remove Portlets, rename and rearrange Portlets."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:12
msgid "Finding the Manage Portlets link"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:14
msgid "|Portlet manage link|"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:17
msgid "Clicking on this link will take us to a new page that will allow us to edit the Portlets. The other method of getting to this screen is by adding /@@manage-portlets to the end of the page URL that we want to edit the Portlets on. For example, to edit the Portlets on the About Us Page, the URL would end up being www.myplonesite.org/about/@@manage-portlets."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:24
msgid "|Manage portlets|"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:28
msgid "Adding a Portlet"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:30
msgid "Adding a Portlet is as simple as selecting the **Add Portlet** drop down box and clicking on the type of Portlet you would like to add. We will cover the different options available in the next section."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:35
msgid "Editing an Existing Portlet"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:37
msgid "To edit the properties of an existing Portlet, simply click on the name of the Portlet. In the example to the left, if we wanted to edit the properties of the Navigation Portlet, we would Click on *Navigation*. Each type of Portlet will have different configuration options available to it."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:44
msgid "Rearranging Portlets"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:46
msgid "To Rearrange your Portlets, simply click the **blue up or down arrow**. This will affect the order your Portlets are displayed on the page."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:50
msgid "Removing Portlets"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:52
msgid "To remove a Portlet, click the **red \"X\"** associated with its name."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:55
msgid "Hiding Portlets"
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:57
msgid "From Plone 4 on you can show/hide portlets using the associated show/hide links present."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:60
msgid "As you may have noticed on the Manage Portlet screen, you have the ability to work with Portlets on both the right and left side of the page. This is because there are two columns for Portlets to be in, a left column and a right column. **Portlets will only appear on the side that you add them on**."
msgstr ""

#: ../working-with-content/portlet-management/managing-portlets.rst:66
msgid "With Portlets, you can add more than one of the same type on a page. There is no limit to how many times you can use an individual Portlet or a limit to how many total Portlets can be on a Page."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:2
#: ../working-with-content/portlet-management/portlet-hierarchy.rst:33
msgid "Portlet Hierarchy"
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:4
msgid "Portlets use a basic hierarchy approach which determines how and why they appear on each section of your site."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:7
msgid "Portlets use a basic hierarchical approach. By default, the portlets that you assign at the root (homepage) of the site will propogate down to all the subsections of the site. If you want a different set of portlets or order of portlets for a particular sub-section, you must use the **Block/unblock portlets** controls, to \"block\" the parent portlets. When you block Portlets, you must explicitly add all the Portlets that you wish to see on the child page."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:15
msgid "The portlet management screen has been updated in Plone 4 to show all portlets, including portlets that are blocked. Users can now see what's being blocked and what's being inherited. When a portlet is blocked, you will notice a subtle change in color on on the portlet management screen:"
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:25
msgid "Blocked portlets in management"
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:27
msgid "In this diagram, our Portlets are designated in blue underneath the Page title:"
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:35
msgid "As you can see we have two Portlets designated on our Home page (navigation and recent items). These same Portlets appear on our About Page because of portlet hierarchy."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:39
msgid "However, on the Documentation page we added a third portlet - the Collection Portlet. Here we are still allowing Parental Portlets, but in addition we specifically added the Collection Portlet."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:43
msgid "On **both** the Tutorials and Videos Pages we have to block Parental Portlets because we do not want the Collection Portlet that is on the Documentation Page to show. When we block Parental Portlets we must re-add the Portlets to **each** Child page. In this case we re-added the Navigation Portlet to both and then added the Search Portlet to both."
msgstr ""

#: ../working-with-content/portlet-management/portlet-hierarchy.rst:49
msgid "Remember that the child pages only inherit from the parent page directly above them. In our example, if we added a page called *Staff* under About and allowed the parent portlets without adding any additional portlets, it would show the same Portlets as the Home Page as well as the About Page. However do not think that it is inheriting from the Home page. If we were to change the About Page and added a Search Portlet, our Staff Page would reflect the Portlets on the About Page not the Home Page."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:2
msgid "Portlet Types"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:4
msgid "Descriptions of each Portlet Type"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:6
msgid "There are several different types of Portlets to chose from. The way that Portlet types are named can be confusing at times. Also, some can be configured through Manage Portlets and others require some setup through the ZMI or by creating other content objects first. Below is a basic description of the use and functionality of each available Portlet type."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:14
msgid "Navigation"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:16
msgid "The Navigation Portlet **allows users to navigate your site** with ease by providing a structured \"site map\", or navigation tree. You have the option to display the navigation for the overall site or choose to only display the current folder contents. On LearnPlone.Org, you can see an example of the Navigation Portlet in the left column. As you dig deeper into the site, the tree will continue to expand. There are several configuration options available that effect how the Navigation Portlet will behave."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:26
msgid "Calendar"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:28
msgid "The Calendar Portlet is a very simple Portlet that will display a Calendar on your site. This Portlet has no customizable options. If you have published Event content objects on your site, the days upon which they occur will be bolded in the calendar and will link to the corresponding events on your site."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:35
msgid "Classic"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:37
msgid "A Classic Portlet is refers to the way portlets were used in older version of Plone, prior to Plone 3. You must create a Page Template in the ZMI and properly set the path and macro to enable the portlet. This requires technical knowledege of both TALES and the ZMI."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:45
msgid "The Collection Portlet will allow you to **display the results of a Collection**. You must have a Collection previously created when you add this Portlet, then you can specifying the Collection to be used . This is a great way to present targeted queries like for example \"newest sightings of Amazonian butterflies\"."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:53
msgid "The Events Portlet will **display Upcoming Events**, provided that you have Events on your site. You can determine how many events you want to be displayed and also which events you want to display based on publishing state."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:59
msgid "Log in"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:61
msgid "The Log in Portlet is another non configurable Portlet that will simply **display a Log in Form** that will allow users with Log in information to log in to the site. Once a user is logged into the site, this Portlet will not appear."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:67
msgid "News"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:69
msgid "The News Portlet works exactly like the Events Portlet. However instead of displaying Events, it **displays recent News items**. Once again you can choose how many News items are displayed and filter them based on their state."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:75
msgid "RSS Feeds"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:77
msgid "The RSS Feed Portlet allows you to link to an RSS Feed, choose how many items to display, and specify the refresh rate."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:81
msgid "Recent Items"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:83
msgid "The Recent Items Portlet displays a customizable **number of Recent Items**, listed by Title. A Recent Item is determined by its Last Modified Date."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:88
msgid "Review List"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:90
msgid "The Review List Portlet will display a **list of objects that have been submitted for review**. If you are using a submit and review cycle (and have properly set global roles for your users) this is a great way for reviewers to see what content has been submitted for review. This Portlet only appears to those logged in as this state is not viewable to the public."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:98
msgid "Search"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:100
msgid "The Search Portlet will place a search box in your Portlet Column. This search box will search the Titles, Descriptions, and Body text of objects on your site for the text specified. You have the option of enabling Live Search. Live Search is a feature which shows live results if the browser supports JavaScript."
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:107
msgid "Static Text"
msgstr ""

#: ../working-with-content/portlet-management/portlet-types.rst:109
msgid "The Static Text Portlet allows you to enter content just as you would on a normal Page object. This is useful for adding hyperlinks to different sites, address information, or any information that is relatively static."
msgstr ""

#: ../working-with-content/using-collections/index.rst:2
msgid "Using Listings & Queries (Collections)"
msgstr ""

#: ../working-with-content/using-collections/index.rst:4
msgid "Collections take advantage of the intelligence of Plone."
msgstr ""

#: ../working-with-content/using-collections/index.rst:6
msgid "Think of them as automatically updated queries, with criteria that you define. As new pieces of content are added, they will show up in these Collections if they match the criteria."
msgstr ""

#: ../working-with-content/using-collections/index.rst:8
msgid "Collections have gone through various iterations, since Plone 4.2 the so-called 'newstyle' collections are enabled by default. These are easy to create and maintain."
msgstr ""

#: ../working-with-content/using-collections/index.rst:16
msgid "Before that, there were 'oldstyle' Collections. Setting them up was a bit less streamlined, but for power users they can have more flexibility, which is why you can enable them in your site if wanted."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:3
msgid "Creating a collection"
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:6
msgid "When you add a new collection, you can select from a lot of different options."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:8
msgid "The content type (Page, Event, Folder, etcetera), various dates, the location in the site and also keywords or tags are available as selection criteria."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:15
msgid "While you're adding criteria, the number of content items that fit those criteria is dynamically updated."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:21
msgid "By combining more criteria, you can create sophisticated queries, which will be automatically updated."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:23
msgid "The combination shown below will always show upcoming events:"
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:25
msgid "content type is event"
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:26
msgid "the start date must be within 31 days from now"
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:33
msgid "The resulting \"Collection\" works much like a Folder, only it is always up-to-date according to the criteria you set."
msgstr ""

#: ../working-with-content/using-collections/newstyle/creating_collections.rst:35
msgid "Please experiment with Collections, they are one of the most powerful features of Plone!"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:2
msgid "Introduction to (new-style) Collections"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:4
msgid "A Collection in Plone works much like a report or query does in a database Use Collections to dynamically sort and display your content."
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:7
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:7
msgid "A **Collection** in Plone works much like a report or query does in a database. The idea is that you use a Collection to search your website based on a set of **Criteria** such as: content type (page, news item, image), the date it was published, or keywords contained in the title, description, or body."
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:10
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:10
msgid "Let's say you have a large catalog of photos and maps on your website. You can easily display them all at once by creating a link to the folder they're stored in. You could even create different links for subfolders if you've organized things that way. However, if your images and maps were spread out over the site in many folders this would quickly become cumbersome. Also, there is no way with normal folders to display different content, from different parts of your site based on things like:"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:16
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:16
msgid "keywords in the title"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:17
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:17
msgid "date of creation"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:18
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:18
msgid "author"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:19
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:19
msgid "type of content"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:21
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:21
msgid "The need for showing content in a variety of dynamic ways has given rise to **Collections** (formerly known as **Smart Folders**, or **Rich Topic** in older versions of Plone). Collections do not actually contain any content items themselves in the same way that a folder does. Instead it is the **Criteria** that you establish which determines what content appears on each Collection page."
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:25
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:25
msgid "Common applications for Collections are:"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:27
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:27
msgid "News Archives"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:28
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:28
msgid "Event Archives"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:29
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:29
msgid "Photos Displayed by Date Range"
msgstr ""

#: ../working-with-content/using-collections/newstyle/introduction-to-collections.rst:30
#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:30
msgid "Content Displayed by Keyword"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:2
msgid "Adding Collections"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:7
msgid "Learning to think about content being stored wherever it is stored, and about using custom collections to gather up different \"views\" of the content, is an important step to using Plone most effectively. It is an intelligent system."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:12
msgid "To add a collection, use the *Add new...* menu, as for adding other content types:"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:19
msgid "p4\\_addnewmenu"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:21
msgid "You will see the Add*Collection*panel:"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:27
msgid "p4\\_addcollection2"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:29
msgid "Below the title and description fields is a set of fields for specifying the format of search results returned by the search criterion for the new collection. The four fields in the panel above are in pairs. The top two fields let you limit the search results to a number of items that will be displayed. The bottom two fields let you control the order of the search result items."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:37
msgid "Setting the search criterion"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:39
msgid "After setting the display configuration in the edit panel shown above, click the criteria tab to show the panel for setting search criteria:"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:46
msgid "p4\\_collectionssearchcrit1 2"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:48
msgid "The top area of the panel, *Add New Search Criteria*, lets you set a field and a matching criterion. The bottom area, *Set Sort Order*, is a simple selection for a field to sort on:"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:56
msgid "p4\\_collectionssearchcrit2 2"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:58
msgid "The criteria types for matching data in content items depend on which field is selected."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:61
msgid "After saving the collection, the search criteria will be applied and the results shown when the collection is clicked. You can create any number of collections for such custom views. For the butterfly example described above, in addition to a date constraint to find recent items, the categories field could be used to match color to have a series of collections for \"Blue Butterflies,\" \"White Butterfles,\" etc."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:68
msgid "Multiple criteria can be used for a collection. For example, a collection called \"Butterflies Photographed in the Last Month,\" could be made by setting a criterion on Creation Date and on Item Type as Image. Such date-based collections are really effective to show up-to-date views of content that don't require any administrative hand-work -- once such a collection has been created, it will automatically stay up to date."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adding-collections.rst:76
msgid "*Note:* A collection doesn't behave like a normal folder, you can't add content items via the add item menu, as you can for a normal folder."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:2
msgid "Adjusting the Display Settings"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:4
msgid "Learn how display settings can change the look of your Collection page"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:6
msgid "While the main power of Collections lies in Criteria, the display settings can make a big difference in the way your Collection will appear. All three of the settings we will cover in this section can be found by clicking the **Edit tab** of a Collection."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:11
msgid "**Inherit Criteria**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:13
msgid "By selecting the **Inherit Criteria** option, the Collection will inherit the Criteria from a parent Collection. This is only useful when using Sub Collections. If this is checked, you can create another Collection that is more specific than the Parent while still retaining the basic criteria of the Parent. A simple example might be a Parent Collection for displaying all Events in a site, and a Sub Collection that also displays Events (by inheriting Criteria) *but only* those Events with a particular keyword."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:22
msgid "**Limit Search Results**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:24
msgid "We can use Limit Search Results to limit the number of results that are Collection will display *per page*. This way if we have a Collection that is displaying News Items, we can limit the results to five or ten, instead of having it show all News Items on a single, large list."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:29
msgid "**Display as a Table**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:31
msgid "Display as a Table is simply another way to display the results of a Collection. Instead of having the Collection spit out the results in a list form, we can have it **generate a table** with the results, and set exactly what information about the results we want displayed. We customize the table by selecting the **Table Columns** from the left and clicking the right arrow button to move it over to the right. In the example above we chose to include the Title of the object, its Creator, and the Effective date. You can use any number of the columns, or all of them if you so choose."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:41
msgid "When considering what to select, keep in mind that not all objects will have the information for every column available. For example, the **Start Date** and **End Date** only apply to Events. Therefore if you added these columns and your table included Pages as well as Events then the rows for the Pages would not have the Start and End Dates filled in. The other thing to consider is that the more columns you have showing the more crowded the table will become. The best rule of thumb is to only display what you absolutely need to display."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/adjusting-the-display-settings.rst:50
msgid "A few more notes on selecting columns: You can select more than one at a time by holding down the control key (Ctrl) while you click. If you want to remove a column, select it on the right and click on the left arrow button. Also you can add and remove columns by double clicking on their name."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:2
msgid "Definition of Criteria"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:4
msgid "Definitions and examples of the different criteria fields available"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:6
msgid "The power of Collections most certainly lies with the Criteria fields. Mastering how to use the different Criteria will allow you to use Collections in several useful ways. In this section, we will use examples to illustrate the many ways of using Criteria."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:12
msgid "Categories"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:14
msgid "The Category criterion allows you to search the **Category field** of objects. For this to work you must specify Categories for the content objects ahead of time (this is done through the Categorization tab on content objects). An example where you could use this is you want to create a Collection that would display all objects relating to the Category *Organization*. As you can see in the image below, we are able to select the value *Organization* for our criterion. Then, by saving this criterion and viewing our Collection, the results would be all content objects we had designated with the Category *Organization*."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:24
msgid "Once again the values available to you are completely dependent on what you have specified on your objects in the Categorization tab."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:28
msgid "Creator"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:30
msgid "When using the Creator criterion, we are **filtering objects based on who created them**. This might be useful if you want to do a featured author section, where you would only want to display content on your site that has been created by a certain author."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:35
msgid "As you can see we have several options for our criterion type. They allow us to restrict the creator to the person currently logged in, enter the name of another user as text, or to select users from a list."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:39
msgid "If you want to display results from multiple users, you would need to use the **List of Values** option. Otherwise you would normally use the Text option unless the creator you wanted to select was yourself in which case you would use Restrict to Current User."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:47
msgid "The Description field is essentially a **search box type** criterion. However, instead of searching the title and body of a page, it will **only search for the text in the Description field** of a content object. This criterion is only really useful if you fill out the Description field consistently for all your content objects."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:54
msgid "Location"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:56
msgid "Using the Location criterion is much like specifying a location when you search for a document on your hard drive. By specifying a Location criterion, **the results that are displayed in your Collection will only come from that location**, most commonly a Folder. This can be useful if you only want to display content that is in the About Us section of your site, for example. This is also useful for narrowing Collection results when combined with other criteria."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:64
msgid "To specify a Location, simply click the **Add button**, which will pop up a new window showing you a directory of your site. If we follow our example and want to search the About Us section of our site, we would click the InsertÂ button next to the About Us folder."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:69
msgid "You can open folders to view content contained within them either by clicking the Browse button or directly on the title of the folder you want to open. You may also use the Search box to search for the Title of an object."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:75
msgid "Search Text"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:77
msgid "The Search Text is a very useful criterion. It is similar to the search box on your site or an Internet search engine. It takes the text you specify and searches the Title, Description, and Body of all objects and returns **any that have the word or phrase you specify**. This is useful when you want to find objects that have to deal with a certain thing, especially if the word or phrase appears across many content types. Using LearnPlone.Org as an example, if I want to create a Collection that displays all objects that reference the word Collections, I would use the Search Text criterion and specify *collections*. All Tutorials, Videos, Glossary items, etc with *collections* in the Title, Description, or Body would then appear in the Collection results."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:90
msgid "Related To"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:92
msgid "The Related To field is another field, like Category, that **must be specified on a content object prior to being used for a Collection**. The Related To field on an object lets you specify which other objects in your site are similar or are relevant to the object you created. By specifying this field, when you create an object you can create a web of related content that will reference each other (think of a \"see also\" kind of function). When you have done this, you can use the Related To criterion in a Collection to display anything related to a specific object.****"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:102
msgid "In this case we have specified that there are pages related to Our Staff, History, and the About Us Homepage. By selecting one or multiple values from this list, our Collection will display the pages that related to that Value."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:107
msgid "If we selected History as the value we wanted, our Collection would show us everything that is related to the History page."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:110
msgid "Keep in mind that the Related To Values list does not work based on which objects are related to content but on which objects have another object related **to it**. The Collection will display the results that are related to that value."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:116
msgid "State"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:118
msgid "Using the State criterion is very simple. It allows us to **sort by published or private** state. It is a very good idea to restrict publicly viewable Collections **to filter on published**, so that no private content appears in the Collection results. Filtering on the Private state can be useful as well. For example, a site administrator might want to quickly see private content, so that they could determine what work needs to be done and what could deleted."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:127
msgid "Dates"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/definition-of-criteria.rst:129
msgid "You may have noticed that there are **several different dates available** to use as Criteria. Since there are such a large number of dates, they will be covered in :doc:`their own section of the manual <using-and-understanding-dates>`"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:2
msgid "Introduction to (old-style) Collections"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/introduction-to-collections.rst:4
msgid "A Collection in Plone works much like a report or query does in a database. Use Collections to dynamically sort and display your content."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:2
msgid "Setting the Sort Order"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:4
msgid "Learn how to use the Sort Order feature to customize the order in which your results display"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:7
msgid "The Sort Order **determines the order the results of the Collection will be displayed in**. Sort Order allows you to sort by three main categories: text, object properties, and dates. When you sort by text, objects will be sorted in alphabetical order. When sorting by one of the object properties, we effectively are grouping objects together by the specified properties. When we sort by a date the results will be displayed with the most recent first (although there are many 'dates' in Plone). All Sort Orders are in Ascending Order unless the Reverse Order check box is selected. By checking this we can display in reverse order, or newest dates first, etc."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:19
msgid "**Dates**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:21
msgid "There are numerous Date options which will be explained in the next section of the manual."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:25
msgid "Object Properties"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:27
msgid "**Item Type**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:29
msgid "When sorting by Item Type, we end up with a Collection that has results that are grouped by Item Type. We would want to use this if we have a Collection that will return many different Item Types. This way we can make the Collection very easy to browse for the site visitor."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:34
msgid "**State**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:36
msgid "Sorting by State will display results grouped by the publishing state. Since there are only two States in the default configuration of Plone, there will only be Published and Private items. We can use this to separate all pages on our site and easily see what we have that is public (Published) and what we are hiding from the public eye (Private)."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:42
msgid "**Category**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:44
msgid "Category Sort Order is useful when we want to display the objects on our site in a manner where they are grouped by the Category we placed them in. Keep in mind, for sorting by Category to even be remotely useful, you must have specified the Category on several objects. If you have not specified any Categories, then sorting by Categories will do nothing."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:50
msgid "**Related To**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:52
msgid "The Related To Sort Order will actually apply a criterion to your Collection. It limits to the results to only those that have Related To information Specified on their properties."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:57
msgid "Text"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:59
msgid "**Short Name**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:61
msgid "Sorting by the Short Name is the same as putting the result objects in alphabetical order. By default Plone sets the Short Name of an object to be the same as the Title. The difference between the two is that the Short Name is all lower case and hyphenated between all words. For example the Short Name for the page titled About Us would be *about-us*. The Short Name is what Plone also uses in the URL for the page (www.myplonesite.org/about-us). You can specify a different Short Name for an object by using the Rename button on the Contents tab."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:70
msgid "**Creator**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:72
msgid "Sorting by the Creator will group all results in alphabetical order by their author. For example, let's say we had several documents published by Bob Baker and several of other documents published by Jane Smith. Sorting by the creator would result in all the documents created by Bob Baker listed first followed by those of Jane Smith."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:78
msgid "**Title**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:80
msgid "Sorting by Title will display the results in alphabetical order, by the object Titles."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/setting-the-sort-order.rst:83
msgid "Next we will cover the Dates that we skipped over in this section as well as the Criteria Field Section."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:2
msgid "Using and Understanding Dates"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:4
msgid "Explanation of the Dates associated with Collections and their uses"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:6
msgid "There are several different types of dates we can choose from, many of them sounding similar. Because of this it is very easy to get confused about which date to use. Below, each date option is defined."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:11
msgid "Dates Defined"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:13
msgid "**Creation Date** The Creation Date is the date the document was made. You can think of this as its birthday, the day it was born. You cannot change the Creation Date of an object."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:18
msgid "**Effective Date** The Effective Date is the date when an object becomes published. This date is customizable through the **Edit tab** on objects under the **Date tab**. However, there it is referred to as the Publishing Date (a minor discrepancy in Plone's nomenclature)."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:24
msgid "**Creation Date** and **Effective Date** are very similar. They both are representative of the beginning point of an object. A very important point to keep in mind when choosing which one you want to use, is that an object can be created long before it ever becomes public. You could have a page that is worked on for several weeks before it is actually published. Thus you would get different results in a Collection depending on which date you used. We recommend using the **Effective Date**, instead of Creation Date for date-oriented Collections. This way your Collection shows results based on when they became viewable to the public, which is more relevant to the audience of your Collection. Also, you can go in and manually adjust the Effective Date to control the sort order which is not something you can do with the Creation Date."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:38
msgid "**Expiration Date** The Expiration Date refers to the day that the item will no longer become publicly available. This date is also customizable through the Edit tab (shown above) like the Effective Date. By default, objects have no Expiration Date."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:44
msgid "**Modification Date** The Modification Date is the date the object was last edited. Note that this date is first set the day the object is created and will automatically change every time the object is edited. There is no way to customize this date. You could use this as a Sort Order along with an Item Type criterion set to Page, to display all recently modified pages within the last week, for example. The What's New listing on the homepage of LearnPlone.Org uses Modification Date as its date criterion. That way both newly created documents *and* ones that have been updated appear in the listing."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:55
msgid "**Event Specific Dates** The two following dates **only** apply to objects that are **Events.** These two dates are very effective for creating Recent Events and Upcoming Events Collections that will let your audience know what your organization is doing and will be doing in the future."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:61
msgid "**Start Date** The Start Date is simply the date that an Event starts."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:64
msgid "**End Date** The End Date is simply the date that the Event ends."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:67
msgid "**Publication Date**"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:69
msgid "The Publication Date is the date when object was last published. It can either be set manually by means of Effective Date field or, if the latter hasn't been set, calculated based on date when object was last published."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:74
msgid "To display Publication Date on your pages you need to switch it on with *\"Display publication date in 'about' information\"* option in **Site Settings Control Panel**. Publication Date will be visible right before object Modification Date inside 'about' information area. Make sure *\"Allow anyone to view 'about' information\"* option is also enabled inside **Security Settings Control Panel** to make it all work."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:82
msgid "Setting Dates"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:84
msgid "A confusing thing about dates can be how its Criteria are set up. They have a setup that is not like any of the other Criteria. First off, you have to choose whether you want a Relative Date or a Date Range."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:88
msgid "The Relative Date allows you to construct a **conditional statement**. Such as: Items modified less than 5 days in the past. A Date Range will allow you to **specify an exact range of dates**, such as 01/02/08 to 02/02/08. The Date Range is useful when you want to create a Collection with a static date that won't change. The Relative Date can be very useful as it will allow you to create Collections that are automatically updating themselves, such as a Recent News Collections or an Upcoming Event Section."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:98
msgid "Relative Date"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:100
msgid "Looking first at the Relative Date option, you can see we have three options to fill out."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:103
msgid "The first option is **Which Day**. This allows us to select the number of days our criterion will include. One of the options is called *Now*. Using this will set the date range to the current day. The other two options do not matter and can be ignored when using *Now*."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:108
msgid "The second option is **In the Past or Future**. This enables us to choose whether we are looking forward or backward into time."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:111
msgid "The last option is **More or Less**. Here we can choose from three options. *Less than* allows us to include everything from now to a period of time equal to or less than the **Which Day** setting, either in the past or future. *More than* will include everything from beyond our specified number of days equal to or more than **Which Day**. Finally *On the Day* will only include things that are on the day we specified in the **Which Day**. Using the example in the image above if we had selected *On the Day* instead of *Less than* our Collection would display only objects that were modified (we are using the Modification Date criterion) 5 days ago."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:122
msgid "If this is confusing to you, try reading it as a statement substituting in the field options you chose. \"I want the results to include objects **More or Less** than **Which Day**, **In the Past or Future**\". Our example in the image above would become \"I want the results to include objects **Less than** **5 days in the past**\"."
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:129
msgid "Date Range"
msgstr ""

#: ../working-with-content/using-collections/oldstyle/using-and-understanding-dates.rst:131
msgid "The **Date Range** is much easier to understand. Both a Start Date and End Date are required (do not confuse these terms with the Event Specific dates!). The Date Range allows us to enter a beginning and an end date and the display everything within that time frame. Notice also that it allows us to specify a specific time of day as well."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:2
msgid "Basics"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:4
msgid "Basic options of TinyMCE."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:6
msgid "The default TinyMCE editor will look like this:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:12
msgid "On top you can see the toolbar, below the text area and at the bottom a resize bar. If you drag the lower right corner you can make the editor window bigger or smaller."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:17
msgid "Toolbar"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/basics.rst:19
msgid "The following table describes the function and output of each button."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/index.rst:2
msgid "Using TinyMCE as visual editor"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/index.rst:4
msgid "A user manual for content creators"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:2
msgid "Inserting Images"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:4
msgid "A description of the options available for inserting images with TinyMCE."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:7
msgid "The TinyMCE editor allows you to insert image files stored in Plone into your document, using the |Image| button on the TinyMCE toolbar:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:14
msgid "Clicking this button launches the Insert Image dialog:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:20
msgid "The three columns of the dialog display:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:22
msgid "In the first column - a folder navigation list."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:23
msgid "In the second column - an object navigation list, from which you can select your image file."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:25
msgid "In the third column - image preview, and options for alignment, size and captions."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:28
msgid "In the example above, an image of a rose was selected - rose.png (rather large one, at its original size of 600\\*450 pixels)."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:31
msgid "According to the \"Image alignment\" option you choose, the image will be placed in your page (and the following HTML code will be generated):"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:34
msgid "lefthand (<img class=\"image-left captioned\" src=\"rose.png\" alt=\"rose\" />);"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:36
msgid "righthand (<img class=\"image-right captioned\" src=\"rose.png\" alt=\"rose\" />);"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:38
msgid "inline (<img class=\"image-inline captioned\" src=\"rose.png\" alt=\"rose\" />)."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:41
msgid "You may also choose the size of the image you need. This is especially convenient when you deal with large images, as there is no need to use Photoshop or other external image editing application to crop or change the size of an image. The \"Image size\" dropdown list provides a choice between many sizes and formats:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:51
msgid "Large (<img src=\"rose.png/image\\_large\" alt=\"rose\" />);"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:52
msgid "Preview (<img src=\"rose.png/image\\_preview\" alt=\"rose\" />);"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:53
msgid "Mini (<img src=\"rose.png/image\\_mini\" alt=\"rose\" />) - the minimum-size image is formed;"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:55
msgid "Thumb (<img src=\"rose.png/image\\_thumb\" alt=\"rose\" />) - a thumb(inch)-size icon is made out of your image (little bigger than 2,5cm);"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:58
msgid "Tile (<img src=\"rose.png/image\\_tile\" alt=\"rose\" />) - a tile is made out of your image;"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:60
msgid "Icon (<img src=\"rose.png/image\\_icon\" alt=\"rose\" />) - an icon is made out of your image;"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:62
msgid "Listing (<img src=\"rose.png/image\\_listing\" alt=\"rose\" />) - a listing icon is made out of your image;"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:66
msgid "Image Captioning"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:68
msgid "It is possible to put image caption under the image in TinyMCE. Caption is taken from image description. Alt text is taken from image title. Alt text and caption update if image is updated."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:72
msgid "To enable image captioning go to **Site Setup â†’ TinyMCE**. Make sure that you have **Allow captioned images** selected in the **Resource Types tab**."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:80
msgid "When you add image to the site, you can put some text into its description that will be displayed as an image caption."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:87
msgid "Now when we create a page, and insert image into it, check the box Caption:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-images.rst:94
msgid "Save this page, and you will see the image followed by its description as the caption all inserted into a frame:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:2
msgid "Inserting Links"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:4
msgid "Inserting internal, external and anchor links."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:7
msgid "Internal Links"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:9
msgid "Select a word or phrase, click the *Insert/edit link* icon, and the *Insert/edit link* panel will appear: |image19|"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:12
msgid "You use this panel by clicking on Home or Current folder to begin navigating the Plone web site to find a folder, page, or image to which you wish to make a link. In the example above, a page named \"Long-tailed Skippers\" has been chosen for the link. After this panel is closed, a link to the \"Long-tailed Skippers\" page will be set for the word or phrase selected for the link."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:20
msgid "External Links"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:22
msgid "Select a word or phrase, click the *Insert/edit link* icon, select *External* under *Libraries*, and the External link panel will appear:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:29
msgid "Type the web address of the external web site in the box after http://. When you press return or leave the field a preview will appear to check the address. If you paste in the web address, make sure you don't have duplicate http:// at the beginning of the address. Then click *ok*. The external link will be set to the word or phrase you selected."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:36
msgid "Anchors"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:38
msgid "Anchors are like position markers within a document, based on headings, subheadings, or another style set within the document. As an example, for a page called \"Eastern Tiger Swallowtail,\" with subheadings entitled \"Description,\" \"Habitat,\" \"Behavior,\" \"Conservation Status,\" and \"Literature,\" an easy set of links to these subheadings (to the positions within the document at those subheadings) can be created using anchors."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:46
msgid "First, create the document with the subheadings set within it, and re-type the subheadings at the top of the document:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:53
msgid "Now create the anchors for each subheading. To create each anchor move the cursor to the beginning of the subheading and press the *Insert/edit anchor* icon. Enter the name of the anchor in the *Anchor name* field. Then click *ok*."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:62
msgid "Then select each of the re-typed subheadings at the top and click the *Insert/edit link* icon to select by subheadings:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:69
msgid "When selecting *Anchors* under *Libraries*, a panel will appear for selecting which subheading to which the anchor link should connect:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:76
msgid "The *Link to anchor* tab will appear. The right side of the panel shows the anchors that have been set within the document. Here the *Description* anchor is chosen for the link (for the word Description, typed at the top of the document)."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-links.rst:81
msgid "You can be creative with this powerful feature, by weaving such links-to-anchors within narrative text, by setting anchors to other styles within the document, and coming up with clever mixes. This functionality is especially important for large documents."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:2
msgid "Inserting Tables"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:4
msgid "Inserting, updating and deleting tables, columns, rows and cells."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:6
msgid "Tables are handy for tabular data and lists. To add a table, put your cursor where you want it and click the *Inserts a new table* icon. You'll see the *Insert/Modify table* panel:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:14
msgid "Setting rows and columns is straightforward. You can add a summary of the table in the *Summary* field if you like. Table class refers to how you want the table to be styled. You have choices such as these:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:22
msgid "Here are examples of these table styles:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:24
msgid "Subdued grid:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:30
msgid "Invisible grid:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:36
msgid "Fancy listing:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:42
msgid "Fancy grid listing:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:48
msgid "Fancy vertical listing:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:54
msgid "After the table has been created you can click in a cell to show table resizing handles:"
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/inserting-tables.rst:61
msgid "In the table above, the cursor has been placed in the \"Special Leader\" cell, which activates little square handles around the edges for resizing the entire table. It also activates the other table controls in the toolbar which, lets you edit properties of a row or a cell, lets you add and remove rows or columns and lets you split and merge cells."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/introduction.rst:4
msgid "Introduction to TinyMCE."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/introduction.rst:6
msgid "TinyMCE is a platform independent web based Javascript HTML WYSIWYG editor. What this means is that it will let you create html content on your web site. TinyMCE supports a lot of Operating Systems and browsers. Some examples are: Mozilla, Internet Explorer, Firefox, Opera, Safari and Chrome. TinyMCE has a large userbase and an active development community."
msgstr ""

#: ../working-with-content/using-tinymce-as-visual-editor/introduction.rst:13
msgid "TinyMCE is the default visual editor starting from Plone 4.0, although Kupu is also available for users who prefer it. TinyMCE was decided to be shipped as default because Kupu wasn't being well-maintained, whereas TinyMCE had a much broader use in other communities, as well as a better plugin story and some other usability niceties as adding both internal and external links via the same button."
msgstr ""

